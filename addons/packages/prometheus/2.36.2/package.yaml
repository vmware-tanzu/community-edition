apiVersion: data.packaging.carvel.dev/v1alpha1
kind: Package
metadata:
  name: prometheus.community.tanzu.vmware.com.2.36.2-3
spec:
  refName: prometheus.community.tanzu.vmware.com
  version: 2.36.2
  releasedAt: 2022-06-23T18:00:00Z
  releaseNotes: "prometheus 2.36.2 https://github.com/prometheus/prometheus/releases/tag/v2.36.2"
  capacityRequirementsDescription: "Varies significantly based on cluster size. A starting point is 16GB RAM and 4 CPU, but this should be tuned based on observed usage."
  valuesSchema:
    openAPIv3:
      title: prometheus.community.tanzu.vmware.com.2.36.2 values schema
      properties:
        namespace:
          type: string
          description: The namespace in which prometheus is deployed.
          default: prometheus
        prometheus:
          type: object
          additionalProperties: false
          description: Prometheus Kubernetes configuration.
          properties:
            deployment:
              type: object
              additionalProperties: false
              description: Prometheus Deployment related configuration.
              properties:
                replicas:
                  type: integer
                  description: Number of prometheus replicas.
                  default: 1
                updateStrategy:
                  type: string
                  description: Type of prometheus upgrade strategy.
                  default: Recreate
                rollingUpdate:
                  type: object
                  additionalProperties: false
                  nullable: true
                  description: Prometheus rollingupdate configuration when strategy is RollingUpdate, It is only work when updateStrategy has been setted RollingUpdate.
                  properties:
                    maxUnavailable:
                      nullable: true
                      description: Specifies the maximum number of Pods that can be unavailable during the update process.
                      default: 25%
                      type: string
                    maxSurge:
                      nullable: true
                      description: Specifies the maximum number of Pods that can be created over the desired number of Pods.
                      default: 25%
                      type: string
                containers:
                  type: object
                  additionalProperties: false
                  description: Prometheus server container configuration.
                  properties:
                    args:
                      type: array
                      description: List of arguments passed via command-line to prometheus server. For more guidance on configuration options consult the Prometheus docs at https://prometheus.io/.
                      items:
                        type: string
                        default: ""
                      default:
                      - --storage.tsdb.retention.time=42d
                      - --config.file=/etc/config/prometheus.yml
                      - --storage.tsdb.path=/data
                      - --web.console.libraries=/etc/prometheus/console_libraries
                      - --web.console.templates=/etc/prometheus/consoles
                      - --web.enable-lifecycle
                    resources:
                      type: object
                      additionalProperties: true
                      nullable: true
                      description: Prometheus containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      properties: {}
                podAnnotations:
                  type: object
                  additionalProperties:
                    type: string
                  nullable: true
                  description: Prometheus deployments pod annotations
                  properties: {}
                podLabels:
                  type: object
                  additionalProperties:
                    type: string
                  nullable: true
                  description: Prometheus deployments pod labels
                  properties: {}
                configmapReload:
                  type: object
                  additionalProperties: false
                  description: configmap-reload related configuration.
                  properties:
                    containers:
                      type: object
                      additionalProperties: false
                      description: configmap-reload container configuration.
                      properties:
                        args:
                          type: array
                          description: List of arguments passed via command-line to configmap reload container. For more guidance on configuration options consult the configmap-reload docs at https://github.com/jimmidyson/configmap-reload#usage
                          items:
                            type: string
                            default: ""
                          default:
                          - --volume-dir=/etc/config
                          - --webhook-url=http://127.0.0.1:9090/-/reload
                        resources:
                          type: object
                          additionalProperties: true
                          description: configmap-reload containers resource requirements (io.k8s.api.core.v1.ResourceRequirements)
                          properties: {}
            service:
              type: object
              additionalProperties: false
              description: Prometheus service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Prometheus.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by Prometheus service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Prometheus pods.
                  default: 9090
                labels:
                  type: object
                  additionalProperties:
                    type: string
                  description: Prometheus service pod labels
                  properties: {}
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: Prometheus service annotations
                  properties: {}
            pvc:
              type: object
              additionalProperties: false
              description: Prometheus's PVC configuration
              properties:
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: Prometheus's persistent volume claim annotations
                  properties: {}
                storageClassName:
                  type: string
                  nullable: true
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: null
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for Prometheus server persistent volume claim.
                  default: 150Gi
            config:
              type: object
              additionalProperties: false
              description: Prometheus configuration.
              properties:
                prometheus_yml:
                  type: string
                  description: The contents of the Prometheus config file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/ for more information.
                  default: |
                    global:
                      evaluation_interval: 1m
                      scrape_interval: 1m
                      scrape_timeout: 10s
                    rule_files:
                    - /etc/config/alerting_rules.yml
                    - /etc/config/recording_rules.yml
                    - /etc/config/alerts
                    - /etc/config/rules
                    scrape_configs:
                    - job_name: 'prometheus'
                      scrape_interval: 5s
                      static_configs:
                      - targets: ['localhost:9090']
                    - job_name: 'kube-state-metrics'
                      static_configs:
                      - targets: ['prometheus-kube-state-metrics.prometheus.svc.cluster.local:8080']

                    - job_name: 'node-exporter'
                      static_configs:
                      - targets: ['prometheus-node-exporter.prometheus.svc.cluster.local:9100']

                    - job_name: 'kubernetes-pods'
                      kubernetes_sd_configs:
                      - role: pod
                      relabel_configs:
                      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                        action: keep
                        regex: true
                      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                        action: replace
                        target_label: __metrics_path__
                        regex: (.+)
                      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                        action: replace
                        regex: ([^:]+)(?::\d+)?;(\d+)
                        replacement: $1:$2
                        target_label: __address__
                      - action: labelmap
                        regex: __meta_kubernetes_pod_label_(.+)
                      - source_labels: [__meta_kubernetes_namespace]
                        action: replace
                        target_label: kubernetes_namespace
                      - source_labels: [__meta_kubernetes_pod_name]
                        action: replace
                        target_label: kubernetes_pod_name
                    - job_name: kubernetes-nodes-cadvisor
                      kubernetes_sd_configs:
                      - role: node
                      relabel_configs:
                      - action: labelmap
                        regex: __meta_kubernetes_node_label_(.+)
                      - replacement: kubernetes.default.svc:443
                        target_label: __address__
                      - regex: (.+)
                        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
                        source_labels:
                        - __meta_kubernetes_node_name
                        target_label: __metrics_path__
                      scheme: https
                      tls_config:
                        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                        insecure_skip_verify: true
                      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    - job_name: kubernetes-apiservers
                      kubernetes_sd_configs:
                      - role: endpoints
                      relabel_configs:
                      - action: keep
                        regex: default;kubernetes;https
                        source_labels:
                        - __meta_kubernetes_namespace
                        - __meta_kubernetes_service_name
                        - __meta_kubernetes_endpoint_port_name
                      scheme: https
                      tls_config:
                        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                        insecure_skip_verify: true
                      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    alerting:
                      alertmanagers:
                      - scheme: http
                        static_configs:
                        - targets:
                          - alertmanager.prometheus.svc:80
                      - kubernetes_sd_configs:
                          - role: pod
                        relabel_configs:
                        - source_labels: [__meta_kubernetes_namespace]
                          regex: default
                          action: keep
                        - source_labels: [__meta_kubernetes_pod_label_app]
                          regex: prometheus
                          action: keep
                        - source_labels: [__meta_kubernetes_pod_label_component]
                          regex: alertmanager
                          action: keep
                        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
                          regex: .*
                          action: keep
                        - source_labels: [__meta_kubernetes_pod_container_port_number]
                          regex:
                          action: drop
                alerting_rules_yml:
                  type: string
                  description: The YAML contents of the Prometheus alerting rules file.
                  default: |
                    {}
                recording_rules_yml:
                  type: string
                  description: The YAML contents of the Prometheus recording rules file.
                  default: |
                    groups:
                      - name: kube-apiserver.rules
                        interval: 3m
                        rules:
                        - expr: |2
                            (
                              (
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[1d]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1d]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[1d]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[1d]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[1d]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[1d]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate1d
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[1h]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[1h]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[1h]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[1h]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[1h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[1h]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate1h
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[2h]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[2h]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[2h]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[2h]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[2h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[2h]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate2h
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[30m]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30m]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[30m]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[30m]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[30m]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[30m]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate30m
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[3d]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[3d]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[3d]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[3d]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[3d]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[3d]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate3d
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[5m]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[5m]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[5m]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[5m]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[5m]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[5m]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate5m
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[6h]))
                                -
                                (
                                  (
                                    sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[6h]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[6h]))
                                  +
                                  sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[6h]))
                                )
                              )
                              +
                              # errors
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET",code=~"5.."}[6h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[6h]))
                          labels:
                            verb: read
                          record: apiserver_request:burnrate6h
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1d]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1d]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[1d]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate1d
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[1h]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[1h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[1h]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate1h
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[2h]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[2h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[2h]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate2h
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[30m]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[30m]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[30m]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate30m
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[3d]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[3d]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[3d]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate3d
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[5m]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[5m]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate5m
                        - expr: |2
                            (
                              (
                                # too slow
                                sum(rate(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
                                -
                                sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",le="1"}[6h]))
                              )
                              +
                              sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE",code=~"5.."}[6h]))
                            )
                            /
                            sum(rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[6h]))
                          labels:
                            verb: write
                          record: apiserver_request:burnrate6h
                        - expr: |
                            sum by (code,resource) (rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"LIST|GET"}[5m]))
                          labels:
                            verb: read
                          record: code_resource:apiserver_request_total:rate5m
                        - expr: |
                            sum by (code,resource) (rate(apiserver_request_total{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[5m]))
                          labels:
                            verb: write
                          record: code_resource:apiserver_request_total:rate5m
                        - expr: |
                            histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET"}[5m]))) > 0
                          labels:
                            quantile: "0.99"
                            verb: read
                          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
                        - expr: |
                            histogram_quantile(0.99, sum by (le, resource) (rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"POST|PUT|PATCH|DELETE"}[5m]))) > 0
                          labels:
                            quantile: "0.99"
                            verb: write
                          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
                        - expr: |2
                            sum(rate(apiserver_request_duration_seconds_sum{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
                            /
                            sum(rate(apiserver_request_duration_seconds_count{subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod)
                          record: cluster:apiserver_request_duration_seconds:mean5m
                        - expr: |
                            histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
                          labels:
                            quantile: "0.99"
                          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
                        - expr: |
                            histogram_quantile(0.9, sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
                          labels:
                            quantile: "0.9"
                          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
                        - expr: |
                            histogram_quantile(0.5, sum(rate(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",subresource!="log",verb!~"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT"}[5m])) without(instance, pod))
                          labels:
                            quantile: "0.5"
                          record: cluster_quantile:apiserver_request_duration_seconds:histogram_quantile
                      - interval: 3m
                        name: kube-apiserver-availability.rules
                        rules:
                        - expr: |2
                            1 - (
                              (
                                # write too slow
                                sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
                                -
                                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
                              ) +
                              (
                                # read too slow
                                sum(increase(apiserver_request_duration_seconds_count{verb=~"LIST|GET"}[30d]))
                                -
                                (
                                  (
                                    sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                                    or
                                    vector(0)
                                  )
                                  +
                                  sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
                                  +
                                  sum(increase(apiserver_request_duration_seconds_bucket{verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
                                )
                              ) +
                              # errors
                              sum(code:apiserver_request_total:increase30d{code=~"5.."} or vector(0))
                            )
                            /
                            sum(code:apiserver_request_total:increase30d)
                          labels:
                            verb: all
                          record: apiserver_request:availability30d
                        - expr: |2
                            1 - (
                              sum(increase(apiserver_request_duration_seconds_count{job="kubernetes-apiservers",verb=~"LIST|GET"}[30d]))
                              -
                              (
                                # too slow
                                (
                                  sum(increase(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope=~"resource|",le="0.1"}[30d]))
                                  or
                                  vector(0)
                                )
                                +
                                sum(increase(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="namespace",le="0.5"}[30d]))
                                +
                                sum(increase(apiserver_request_duration_seconds_bucket{job="kubernetes-apiservers",verb=~"LIST|GET",scope="cluster",le="5"}[30d]))
                              )
                              +
                              # errors
                              sum(code:apiserver_request_total:increase30d{verb="read",code=~"5.."} or vector(0))
                            )
                            /
                            sum(code:apiserver_request_total:increase30d{verb="read"})
                          labels:
                            verb: read
                          record: apiserver_request:availability30d
                        - expr: |2
                            1 - (
                              (
                                # too slow
                                sum(increase(apiserver_request_duration_seconds_count{verb=~"POST|PUT|PATCH|DELETE"}[30d]))
                                -
                                sum(increase(apiserver_request_duration_seconds_bucket{verb=~"POST|PUT|PATCH|DELETE",le="1"}[30d]))
                              )
                              +
                              # errors
                              sum(code:apiserver_request_total:increase30d{verb="write",code=~"5.."} or vector(0))
                            )
                            /
                            sum(code:apiserver_request_total:increase30d{verb="write"})
                          labels:
                            verb: write
                          record: apiserver_request:availability30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="LIST",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="GET",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="POST",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PUT",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PATCH",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="DELETE",code=~"2.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="LIST",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="GET",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="POST",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PUT",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PATCH",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="DELETE",code=~"3.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="LIST",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="GET",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="POST",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PUT",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PATCH",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="DELETE",code=~"4.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="LIST",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="GET",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="POST",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PUT",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="PATCH",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code, verb) (increase(apiserver_request_total{job="kubernetes-apiservers",verb="DELETE",code=~"5.."}[30d]))
                          record: code_verb:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"LIST|GET"})
                          labels:
                            verb: read
                          record: code:apiserver_request_total:increase30d
                        - expr: |
                            sum by (code) (code_verb:apiserver_request_total:increase30d{verb=~"POST|PUT|PATCH|DELETE"})
                          labels:
                            verb: write
                          record: code:apiserver_request_total:increase30d
                alerts_yml:
                  type: string
                  description: Additional prometheus alerts can be configured in this YAML file.
                  default: |
                    {}
                rules_yml:
                  type: string
                  description: Additional prometheus rules can be configured in this YAML file.
                  default: |
                    {}
        ingress:
          type: object
          additionalProperties: false
          nullable: true
          description: Prometheus and Alertmanager Ingress configuration.
          properties:
            enabled:
              type: boolean
              description: Whether to enable Prometheus and Alertmanager Ingress. Note that this requires contour.
              default: false
            virtual_host_fqdn:
              type: string
              description: Hostname for accessing prometheus and alertmanager.
              default: prometheus.system.tanzu
            prometheus_prefix:
              type: string
              description: Path prefix for Prometheus.
              default: /
            alertmanager_prefix:
              type: string
              description: Path prefix for Alertmanager.
              default: /alertmanager/
            prometheusServicePort:
              type: integer
              description: Prometheus service port to proxy traffic to.
              default: 80
            alertmanagerServicePort:
              type: integer
              description: Alertmanager service port to proxy traffic to.
              default: 80
            tlsCertificate:
              type: object
              additionalProperties: false
              nullable: true
              description: Prometheus Ingress TLS certificate configuration. If skipped, a cert-manager cert will be issued and the cert-manager package must be installed on your cluster.
              properties:
                tls.crt:
                  type: string
                  description: Optional cert for ingress if you want to use your own TLS cert. A self signed cert is generated by default. Note that tls.crt is a key and not nested.
                  default: crt
                tls.key:
                  type: string
                  description: Optional cert private key for ingress if you want to use your own TLS cert. Note that tls.key is a key and not nested.
                  default: key
                ca.crt:
                  type: string
                  description: Optional CA certificate. Note that ca.crt is a key and not nested.
                  default: ca
        alertmanager:
          type: object
          additionalProperties: false
          description: Alertmanager Kubernetes configuration.
          properties:
            deployment:
              type: object
              additionalProperties: false
              description: Alertmanager Deployment related configuration.
              properties:
                replicas:
                  type: integer
                  description: Number of alertmanager replicas.
                  default: 1
                updateStrategy:
                  type: string
                  description: The type of alertmanager upgrage strategy (RollingUpdate/Recreate)
                  default: Recreate
                rollingUpdate:
                  type: object
                  additionalProperties: false
                  description: alertmanager rollingupdate configuration when strategy is RollingUpdate, It is only work when updateStrategy has been setted RollingUpdate.
                  properties:
                    maxUnavailable:
                      type: string
                      description: Specifies the maximum number of Pods that can be unavailable during the update process.
                      default: 25%
                    maxSurge:
                      type: string
                      description: Specifies the maximum number of Pods that can be created over the desired number of Pods.
                      default: 25%
                containers:
                  type: object
                  additionalProperties: false
                  description: Alertmanager server container configuration.
                  properties:
                    resources:
                      type: object
                      additionalProperties: true
                      description: Alertmanager containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      properties: {}
                podAnnotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: Alertmanager deployments pod annotations
                  properties: {}
                podLabels:
                  type: object
                  additionalProperties:
                    type: string
                  description: Alertmanager deployments pod labels
                  properties: {}
            service:
              type: object
              additionalProperties: false
              description: Alertmanager service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for Alertmanager.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by Alertmanager service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the Alertmanager pods.
                  default: 9093
                labels:
                  type: object
                  additionalProperties:
                    type: string
                  description: Alertmanager service pod labels
                  properties: {}
                annotations:
                  type: object
                  additionalProperties: false
                  description: Alertmanager service annotations
                  properties: {}
            pvc:
              type: object
              additionalProperties: false
              description: Alertmanager's PVC configuration
              properties:
                annotations:
                  type: object
                  additionalProperties: false
                  description: Alertmanager's persistent volume claim annotations
                  properties: {}
                storageClassName:
                  type: string
                  description: The name of the StorageClass to use for persistent volume claim. By default this is null and default provisioner is used
                  default: default
                accessMode:
                  type: string
                  description: The name of the AccessModes to use for persistent volume claim. By default this is null and default provisioner is used
                  default: ReadWriteOnce
                storage:
                  type: string
                  description: The storage size for Alertmanager server persistent volume claim.
                  default: 2Gi
            config:
              type: object
              additionalProperties: false
              description: Alertmanager configuration.
              properties:
                alertmanager_yml:
                  type: string
                  description: The contents of the Alertmanager config file. See https://prometheus.io/docs/alerting/latest/configuration/ for more information.
                  default: |
                    global: {}
                    receivers:
                    - name: default-receiver
                    templates:
                    - '/etc/alertmanager/templates/*.tmpl'
                    route:
                      group_interval: 5m
                      group_wait: 10s
                      receiver: default-receiver
                      repeat_interval: 3h
        kube_state_metrics:
          type: object
          additionalProperties: false
          description: kube-state-metrics Kubernetes configuration.
          properties:
            deployment:
              type: object
              additionalProperties: false
              description: kube-state-metrics deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of kube-state-metrics replicas.
                  default: 1
                containers:
                  type: object
                  additionalProperties: false
                  description: kube-state-metrics container configuration.
                  properties:
                    resources:
                      type: object
                      additionalProperties: true
                      description: kube-state-metrics containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      properties: {}
                podAnnotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: kube-state-metrics deployments pod annotations
                  properties: {}
                podLabels:
                  type: object
                  additionalProperties:
                    type: string
                  description: kube-state-metrics deployments pod labels
                  properties: {}
            service:
              type: object
              additionalProperties: false
              description: kube-state-metrics service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for kube-state-metrics.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by kube-state-metrics service.
                  default: 80
                targetPort:
                  type: integer
                  description: Target Port to access on the kube-state-metrics pods.
                  default: 8080
                telemetryPort:
                  type: integer
                  description: The ports that are exposed by kube-state-metrics service.
                  default: 81
                telemetryTargetPort:
                  type: integer
                  description: Target Port to access on the kube-state-metrics pods.
                  default: 8081
                labels:
                  type: object
                  additionalProperties:
                    type: string
                  description: kube-state-metrics service pod labels
                  properties: {}
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: kube-state-metrics service annotations
                  properties: {}
        node_exporter:
          type: object
          additionalProperties: false
          description: node-exporter Kubernetes configuration.
          properties:
            daemonset:
              type: object
              additionalProperties: false
              description: node-exporter deamonset related configuration
              properties:
                hostNetwork:
                  type: boolean
                  description: The Host networking requested for this pod
                  default: false
                updatestrategy:
                  type: string
                  description: The type of DaemonSet update.
                  default: RollingUpdate
                containers:
                  type: object
                  additionalProperties: false
                  description: node-exporter container configuration.
                  properties:
                    resources:
                      type: object
                      additionalProperties: true
                      description: node-exporter containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      properties: {}
                podAnnotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: node-exporter deployments pod annotations
                  properties: {}
                podLabels:
                  type: object
                  additionalProperties:
                    type: string
                  description: node-exporter deployments pod labels
                  properties: {}
            service:
              type: object
              additionalProperties: false
              description: node-exporter service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for node-exporter.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by node-exporter service.
                  default: 9100
                targetPort:
                  type: integer
                  description: Target Port to access on the node-exporter pods.
                  default: 9100
                labels:
                  type: object
                  additionalProperties:
                    type: string
                  description: node-exporter service pod labels
                  properties: {}
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: node-exporter service annotations
                  properties: {}
        pushgateway:
          type: object
          additionalProperties: false
          description: pushgateway Kubernetes configuration.
          properties:
            deployment:
              type: object
              additionalProperties: false
              description: pushgateway deployment related configuration
              properties:
                replicas:
                  type: integer
                  description: Number of pushgateway replicas.
                  default: 1
                containers:
                  type: object
                  additionalProperties: false
                  description: pushgateway container configuration.
                  properties:
                    resources:
                      type: object
                      additionalProperties: true
                      description: ushgateway containers resource requirements (See Kubernetes OpenAPI Specification io.k8s.api.core.v1.ResourceRequirements)
                      properties: {}
                podAnnotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: pushgateway deployments pod annotations
                  properties: {}
                podLabels:
                  type: object
                  additionalProperties:
                    type: string
                  description: pushgateway deployments pod labels
                  properties: {}
            service:
              type: object
              additionalProperties: false
              description: pushgateway service configuration.
              properties:
                type:
                  type: string
                  description: The type of Kubernetes service to provision for pushgateway.
                  default: ClusterIP
                port:
                  type: integer
                  description: The ports that are exposed by pushgateway service.
                  default: 9091
                targetPort:
                  type: integer
                  description: Target Port to access on the pushgateway pods.
                  default: 9091
                labels:
                  type: object
                  additionalProperties:
                    type: string
                  description: pushgateway service pod labels
                  properties: {}
                annotations:
                  type: object
                  additionalProperties:
                    type: string
                  description: pushgateway service annotations
                  properties: {}
  licenses:
    - "Apache 2.0"
  template:
    spec:
      fetch:
        - imgpkgBundle:
            image: projects.registry.vmware.com/tce/prometheus@sha256:ca01e4cf092a776a7818d62f17c56fdabdaf6ddf1cea03d86bf6b9610f40fecd
      template:
        - ytt:
            paths:
              - config/
        - kbld:
            paths:
              - "-"
              - .imgpkg/images.yml
      deploy:
        - kapp: {}
