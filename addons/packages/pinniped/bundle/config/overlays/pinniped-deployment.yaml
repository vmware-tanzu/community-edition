#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("/libs/globals.star", "get_image_location", "globals")

#@ if data.values.tkg_cluster_role == "management":
#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "pinniped-supervisor"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name": "pinniped-supervisor"})
        - name: pinniped-supervisor
          #@overlay/match missing_ok=True
          env:
            #@ if/end data.values.http_proxy:
            - name: HTTP_PROXY
              value: #@ data.values.http_proxy
            #@ if/end data.values.https_proxy:
            - name: HTTPS_PROXY
              value: #@ data.values.https_proxy
            #@ if/end data.values.no_proxy:
            - name: NO_PROXY
              value: #@ data.values.no_proxy
          image: #@ get_image_location(data.values.imageInfo.imageRepository, data.values.imageInfo.images.pinnipedImage.imagePath, data.values.imageInfo.images.pinnipedImage.tag)
          imagePullPolicy: #@ data.values.imageInfo.imagePullPolicy
#@ end

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "pinniped-concierge"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name": "pinniped-concierge"})
        - name: pinniped-concierge
          #! No need to add HTTP Proxy for concierge pods, since only supervisor pods are communicating with external IDP
          image: #@ get_image_location(data.values.imageInfo.imageRepository, data.values.imageInfo.images.pinnipedImage.imagePath, data.values.imageInfo.images.pinnipedImage.tag)
          imagePullPolicy: #@ data.values.imageInfo.imagePullPolicy
