apiVersion: v1
kind: ConfigMap
metadata:
  name: pinniped-kapp-config
  labels:
    kapp.k14s.io/config: ""
data:
  config.yml: |
    apiVersion: kapp.k14s.io/v1alpha1
    kind: Config
    rebaseRules:
    - paths:
      - [spec, issuer]
      - [spec, tls]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - andMatcher:
          matchers:
          - apiVersionKindMatcher: {apiVersion: idp.supervisor.pinniped.dev/v1alpha1, kind: OIDCIdentityProvider}
          - hasNamespaceMatcher:
              names: [pinniped-supervisor]
    - path: [spec, issuer]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - andMatcher:
          matchers:
          - apiVersionKindMatcher: {apiVersion: config.supervisor.pinniped.dev/v1alpha1, kind: FederationDomain}
          - hasNamespaceMatcher:
              names: [pinniped-supervisor]
    - paths:
      - [spec, audience]
      - [spec, claims]
      - [spec, issuer]
      - [spec, tls]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - apiVersionKindMatcher: {apiVersion: authentication.concierge.pinniped.dev/v1alpha1, kind: JWTAuthenticator}
    - path: [data]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - kindNamespaceNameMatcher: {kind: ConfigMap, namespace: tanzu-system-auth, name: dex}
    - path: [spec]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - kindNamespaceNameMatcher: {kind: Certificate, namespace: pinniped-supervisor, name: pinniped-cert}
    - path: [spec]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - kindNamespaceNameMatcher: {kind: Certificate, namespace: tanzu-system-auth, name: dex-cert}
    - path: [data]
      type: copy
      sources: [existing, new]
      resourceMatchers:
      - kindNamespaceNameMatcher: {kind: Secret, namespace: pinniped-supervisor, name: upstream-idp-client-credentials}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinniped-info
  namespace: kube-public
data:
  concierge_is_cluster_scoped: "true"
---
apiVersion: authentication.concierge.pinniped.dev/v1alpha1
kind: JWTAuthenticator
metadata:
  name: tkg-jwt-authenticator
spec:
  audience: https://<pinniped-supervisor-svc-host>:<port>
  issuer: https://<pinniped-supervisor-svc-host>:<port>
  tls:
    certificateAuthorityData: LS0tLS1CRxxxxxxxxT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    kapp.k14s.io/update-strategy: fallback-on-replace
  creationTimestamp: null
  name: jwtauthenticators.authentication.concierge.pinniped.dev
  labels:
    app: pinniped-concierge
spec:
  group: authentication.concierge.pinniped.dev
  names:
    categories:
    - pinniped
    - pinniped-authenticator
    - pinniped-authenticators
    kind: JWTAuthenticator
    listKind: JWTAuthenticatorList
    plural: jwtauthenticators
    singular: jwtauthenticator
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.issuer
      name: Issuer
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: "JWTAuthenticator describes the configuration of a JWT authenticator. \n Upon receiving a signed JWT, a JWTAuthenticator will performs some validation on it (e.g., valid signature, existence of claims, etc.) and extract the username and groups from the token."
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec for configuring the authenticator.
            properties:
              audience:
                description: Audience is the required value of the "aud" JWT claim.
                minLength: 1
                type: string
              claims:
                description: Claims allows customization of the claims that will be mapped to user identity for Kubernetes access.
                properties:
                  groups:
                    description: Groups is the name of the claim which should be read to extract the user's group membership from the JWT token. When not specified, it will default to "groups".
                    type: string
                  username:
                    description: Username is the name of the claim which should be read to extract the username from the JWT token. When not specified, it will default to "username".
                    type: string
                type: object
              issuer:
                description: Issuer is the OIDC issuer URL that will be used to discover public signing keys. Issuer is also used to validate the "iss" JWT claim.
                minLength: 1
                pattern: ^https://
                type: string
              tls:
                description: TLS configuration for communicating with the OIDC provider.
                properties:
                  certificateAuthorityData:
                    description: X.509 Certificate Authority (base64-encoded PEM bundle). If omitted, a default set of system roots will be trusted.
                    type: string
                type: object
            required:
            - audience
            - issuer
            type: object
          status:
            description: Status of the authenticator.
            properties:
              conditions:
                description: Represents the observations of the authenticator's current state.
                items:
                  description: Condition status of a resource (mirrored from the metav1.Condition type added in Kubernetes 1.19). In a future API version we can switch to using the upstream type. See https://github.com/kubernetes/apimachinery/blob/v0.19.0/pkg/apis/meta/v1/types.go#L1353-L1413.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    kapp.k14s.io/update-strategy: fallback-on-replace
  creationTimestamp: null
  name: webhookauthenticators.authentication.concierge.pinniped.dev
  labels:
    app: pinniped-concierge
spec:
  group: authentication.concierge.pinniped.dev
  names:
    categories:
    - pinniped
    - pinniped-authenticator
    - pinniped-authenticators
    kind: WebhookAuthenticator
    listKind: WebhookAuthenticatorList
    plural: webhookauthenticators
    singular: webhookauthenticator
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.endpoint
      name: Endpoint
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: WebhookAuthenticator describes the configuration of a webhook authenticator.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec for configuring the authenticator.
            properties:
              endpoint:
                description: Webhook server endpoint URL.
                minLength: 1
                pattern: ^https://
                type: string
              tls:
                description: TLS configuration.
                properties:
                  certificateAuthorityData:
                    description: X.509 Certificate Authority (base64-encoded PEM bundle). If omitted, a default set of system roots will be trusted.
                    type: string
                type: object
            required:
            - endpoint
            type: object
          status:
            description: Status of the authenticator.
            properties:
              conditions:
                description: Represents the observations of the authenticator's current state.
                items:
                  description: Condition status of a resource (mirrored from the metav1.Condition type added in Kubernetes 1.19). In a future API version we can switch to using the upstream type. See https://github.com/kubernetes/apimachinery/blob/v0.19.0/pkg/apis/meta/v1/types.go#L1353-L1413.
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    kapp.k14s.io/update-strategy: fallback-on-replace
  creationTimestamp: null
  name: credentialissuers.config.concierge.pinniped.dev
  labels:
    app: pinniped-concierge
spec:
  group: config.concierge.pinniped.dev
  names:
    categories:
    - pinniped
    kind: CredentialIssuer
    listKind: CredentialIssuerList
    plural: credentialissuers
    singular: credentialissuer
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CredentialIssuer describes the configuration and status of the Pinniped Concierge credential issuer.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec describes the intended configuration of the Concierge.
            properties:
              impersonationProxy:
                description: ImpersonationProxy describes the intended configuration of the Concierge impersonation proxy.
                properties:
                  externalEndpoint:
                    description: "ExternalEndpoint describes the HTTPS endpoint where the proxy will be exposed. If not set, the proxy will be served using the external name of the LoadBalancer service or the cluster service DNS name. \n This field must be non-empty when spec.impersonationProxy.service.type is \"None\"."
                    type: string
                  mode:
                    description: 'Mode configures whether the impersonation proxy should be started: - "disabled" explicitly disables the impersonation proxy. This is the default. - "enabled" explicitly enables the impersonation proxy. - "auto" enables or disables the impersonation proxy based upon the cluster in which it is running.'
                    enum:
                    - auto
                    - enabled
                    - disabled
                    type: string
                  service:
                    default:
                      type: LoadBalancer
                    description: Service describes the configuration of the Service provisioned to expose the impersonation proxy to clients.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations specifies zero or more key/value pairs to set as annotations on the provisioned Service.
                        type: object
                      loadBalancerIP:
                        description: LoadBalancerIP specifies the IP address to set in the spec.loadBalancerIP field of the provisioned Service. This is not supported on all cloud providers.
                        maxLength: 255
                        minLength: 1
                        type: string
                      type:
                        default: LoadBalancer
                        description: "Type specifies the type of Service to provision for the impersonation proxy. \n If the type is \"None\", then the \"spec.impersonationProxy.externalEndpoint\" field must be set to a non-empty value so that the Concierge can properly advertise the endpoint in the CredentialIssuer's status."
                        enum:
                        - LoadBalancer
                        - ClusterIP
                        - None
                        type: string
                    type: object
                required:
                - mode
                - service
                type: object
            required:
            - impersonationProxy
            type: object
          status:
            description: CredentialIssuerStatus describes the status of the Concierge.
            properties:
              kubeConfigInfo:
                description: Information needed to form a valid Pinniped-based kubeconfig using this credential issuer. This field is deprecated and will be removed in a future version.
                properties:
                  certificateAuthorityData:
                    description: The K8s API server CA bundle.
                    minLength: 1
                    type: string
                  server:
                    description: The K8s API server URL.
                    minLength: 1
                    pattern: ^https://|^http://
                    type: string
                required:
                - certificateAuthorityData
                - server
                type: object
              strategies:
                description: List of integration strategies that were attempted by Pinniped.
                items:
                  description: CredentialIssuerStrategy describes the status of an integration strategy that was attempted by Pinniped.
                  properties:
                    frontend:
                      description: Frontend describes how clients can connect using this strategy.
                      properties:
                        impersonationProxyInfo:
                          description: ImpersonationProxyInfo describes the parameters for the impersonation proxy on this Concierge. This field is only set when Type is "ImpersonationProxy".
                          properties:
                            certificateAuthorityData:
                              description: CertificateAuthorityData is the base64-encoded PEM CA bundle of the impersonation proxy.
                              minLength: 1
                              type: string
                            endpoint:
                              description: Endpoint is the HTTPS endpoint of the impersonation proxy.
                              minLength: 1
                              pattern: ^https://
                              type: string
                          required:
                          - certificateAuthorityData
                          - endpoint
                          type: object
                        tokenCredentialRequestInfo:
                          description: TokenCredentialRequestAPIInfo describes the parameters for the TokenCredentialRequest API on this Concierge. This field is only set when Type is "TokenCredentialRequestAPI".
                          properties:
                            certificateAuthorityData:
                              description: CertificateAuthorityData is the base64-encoded Kubernetes API server CA bundle.
                              minLength: 1
                              type: string
                            server:
                              description: Server is the Kubernetes API server URL.
                              minLength: 1
                              pattern: ^https://|^http://
                              type: string
                          required:
                          - certificateAuthorityData
                          - server
                          type: object
                        type:
                          description: Type describes which frontend mechanism clients can use with a strategy.
                          enum:
                          - TokenCredentialRequestAPI
                          - ImpersonationProxy
                          type: string
                      required:
                      - type
                      type: object
                    lastUpdateTime:
                      description: When the status was last checked.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable description of the current status.
                      minLength: 1
                      type: string
                    reason:
                      description: Reason for the current status.
                      enum:
                      - Listening
                      - Pending
                      - Disabled
                      - ErrorDuringSetup
                      - CouldNotFetchKey
                      - CouldNotGetClusterInfo
                      - FetchedKey
                      type: string
                    status:
                      description: Status of the attempted integration strategy.
                      enum:
                      - Success
                      - Error
                      type: string
                    type:
                      description: Type of integration attempted.
                      enum:
                      - KubeClusterSigningCertificate
                      - ImpersonationProxy
                      type: string
                  required:
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - strategies
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  name: pinniped-concierge
  labels:
    app: pinniped-concierge
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinniped-concierge
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinniped-concierge-kube-cert-agent
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinniped-concierge-impersonation-proxy
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
  annotations:
    kapp.k14s.io/change-group: impersonation-proxy.concierge.pinniped.dev/serviceaccount
secrets:
- name: pinniped-concierge-impersonation-proxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinniped-concierge-config
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
data:
  pinniped.yaml: "discovery:\n  url: null\napi:\n  servingCertificate:\n    durationSeconds: 2592000\n    renewBeforeSeconds: 2160000\napiGroupSuffix: pinniped.dev\nnames:\n  servingCertificateSecret: pinniped-concierge-api-tls-serving-certificate\n  credentialIssuer: pinniped-concierge-config\n  apiService: pinniped-concierge-api\n  impersonationLoadBalancerService: pinniped-concierge-impersonation-proxy-load-balancer\n  impersonationClusterIPService: pinniped-concierge-impersonation-proxy-cluster-ip\n  impersonationTLSCertificateSecret: pinniped-concierge-impersonation-proxy-tls-serving-certificate\n  impersonationCACertificateSecret: pinniped-concierge-impersonation-proxy-ca-certificate\n  impersonationSignerSecret: pinniped-concierge-impersonation-proxy-signer-ca-certificate\n  agentServiceAccount: pinniped-concierge-kube-cert-agent\nlabels: {\"app\":\"pinniped-concierge\"}\nkubeCertAgent:\n  namePrefix: pinniped-concierge-kube-cert-agent-\n  \n  \n  image: docker.io/getpinniped/pinniped-server:v0.12.1\n  \n  \n  \n\n"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinniped-concierge
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pinniped-concierge
  template:
    metadata:
      labels:
        app: pinniped-concierge
        deployment.pinniped.dev: concierge
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      serviceAccountName: pinniped-concierge
      containers:
      - name: pinniped-concierge
        image: docker.io/getpinniped/pinniped-server:v0.12.1
        imagePullPolicy: IfNotPresent
        securityContext:
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 128Mi
        command:
        - pinniped-concierge
        - --config=/etc/config/pinniped.yaml
        - --downward-api-path=/etc/podinfo
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: podinfo
          mountPath: /etc/podinfo
          readOnly: true
        - name: impersonation-proxy
          mountPath: /var/run/secrets/impersonation-proxy.concierge.pinniped.dev/serviceaccount
          readOnly: true
        env: []
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 2
          timeoutSeconds: 15
          periodSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 2
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 3
      volumes:
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 100Mi
      - name: config-volume
        configMap:
          name: pinniped-concierge-config
      - name: impersonation-proxy
        secret:
          secretName: pinniped-concierge-impersonation-proxy
          items:
          - key: token
            path: token
      - name: podinfo
        downwardAPI:
          items:
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
          - path: name
            fieldRef:
              fieldPath: metadata.name
          - path: namespace
            fieldRef:
              fieldPath: metadata.namespace
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  deployment.pinniped.dev: concierge
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: pinniped-concierge-api
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: ""
spec:
  type: ClusterIP
  selector:
    deployment.pinniped.dev: concierge
  ports:
  - protocol: TCP
    port: 443
    targetPort: 8443
---
apiVersion: v1
kind: Service
metadata:
  name: pinniped-concierge-proxy
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: ""
spec:
  type: ClusterIP
  selector:
    deployment.pinniped.dev: concierge
  ports:
  - protocol: TCP
    port: 443
    targetPort: 8444
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.login.concierge.pinniped.dev
  labels:
    app: pinniped-concierge
spec:
  version: v1alpha1
  group: login.concierge.pinniped.dev
  groupPriorityMinimum: 9900
  versionPriority: 15
  service:
    name: pinniped-concierge-api
    namespace: pinniped-concierge
    port: 443
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.identity.concierge.pinniped.dev
  labels:
    app: pinniped-concierge
spec:
  version: v1alpha1
  group: identity.concierge.pinniped.dev
  groupPriorityMinimum: 9900
  versionPriority: 15
  service:
    name: pinniped-concierge-api
    namespace: pinniped-concierge
    port: 443
---
apiVersion: config.concierge.pinniped.dev/v1alpha1
kind: CredentialIssuer
metadata:
  name: pinniped-concierge-config
  labels:
    app: pinniped-concierge
spec:
  impersonationProxy:
    mode: auto
    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "4000"
---
apiVersion: v1
kind: Secret
metadata:
  name: pinniped-concierge-impersonation-proxy
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
  annotations:
    kapp.k14s.io/change-rule: upsert after upserting impersonation-proxy.concierge.pinniped.dev/serviceaccount
    kubernetes.io/service-account.name: pinniped-concierge-impersonation-proxy
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pinniped-concierge-aggregated-api-server
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - flowcontrol.apiserver.k8s.io
  resources:
  - flowschemas
  - prioritylevelconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - nonroot
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - config.concierge.pinniped.dev
  resources:
  - credentialissuers
  verbs:
  - get
  - list
  - watch
  - create
- apiGroups:
  - config.concierge.pinniped.dev
  resources:
  - credentialissuers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - authentication.concierge.pinniped.dev
  resources:
  - jwtauthenticators
  - webhookauthenticators
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-aggregated-api-server
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: ClusterRole
  name: pinniped-concierge-aggregated-api-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pinniped-concierge-impersonation-proxy
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccounts
  verbs:
  - impersonate
- apiGroups:
  - authentication.k8s.io
  resources:
  - '*'
  verbs:
  - impersonate
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-impersonation-proxy
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge-impersonation-proxy
  namespace: pinniped-concierge
roleRef:
  kind: ClusterRole
  name: pinniped-concierge-impersonation-proxy
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pinniped-concierge-kube-cert-agent
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-kube-cert-agent
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge-kube-cert-agent
  namespace: pinniped-concierge
roleRef:
  kind: Role
  name: pinniped-concierge-kube-cert-agent
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pinniped-concierge-aggregated-api-server
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-aggregated-api-server
  namespace: pinniped-concierge
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: Role
  name: pinniped-concierge-aggregated-api-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pinniped-concierge-kube-system-pod-read
  namespace: kube-system
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-kube-system-pod-read
  namespace: kube-system
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: Role
  name: pinniped-concierge-kube-system-pod-read
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pinniped-concierge-pre-authn-apis
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - login.concierge.pinniped.dev
  resources:
  - tokencredentialrequests
  verbs:
  - create
  - list
- apiGroups:
  - identity.concierge.pinniped.dev
  resources:
  - whoamirequests
  verbs:
  - create
  - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-pre-authn-apis
  labels:
    app: pinniped-concierge
subjects:
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: system:unauthenticated
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: pinniped-concierge-pre-authn-apis
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: ClusterRole
  name: system:auth-delegator
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-extension-apiserver-authentication-reader
  namespace: kube-system
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: Role
  name: extension-apiserver-authentication-reader
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-cluster-info-lister-watcher
  namespace: kube-public
  labels:
    app: pinniped-concierge
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-concierge-cluster-info-lister-watcher
  namespace: kube-public
  labels:
    app: pinniped-concierge
subjects:
- kind: ServiceAccount
  name: pinniped-concierge
  namespace: pinniped-concierge
roleRef:
  kind: Role
  name: pinniped-concierge-cluster-info-lister-watcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Namespace
metadata:
  name: pinniped-supervisor
  labels:
    app: pinniped-supervisor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinniped-post-deploy-job-sa
  namespace: pinniped-supervisor
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tkg-pinniped-post-deploy-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  - services
  - pods
  verbs:
  - get
  - list
  - delete
  - create
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - delete
  - create
  - update
- apiGroups:
  - config.supervisor.pinniped.dev
  resources:
  - federationdomains
  verbs:
  - get
  - list
  - delete
  - create
  - update
- apiGroups:
  - authentication.concierge.pinniped.dev
  resources:
  - jwtauthenticators
  verbs:
  - get
  - list
  - delete
  - create
  - update
- apiGroups:
  - idp.supervisor.pinniped.dev
  resources:
  - oidcidentityproviders
  verbs:
  - get
  - list
  - update
  - create
  - delete
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tkg-pinniped-post-deploy-cluster-role-binding
subjects:
- kind: ServiceAccount
  name: pinniped-post-deploy-job-sa
  namespace: pinniped-supervisor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tkg-pinniped-post-deploy-cluster-role
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pinniped-post-deploy-job
  namespace: pinniped-supervisor
  annotations:
    kapp.k14s.io/update-strategy: always-replace
    pinniped-addon-template/hash: e689c9ecbd0e9ed071b4e651e5dc893770357189f4f488f0a218733bbc4e865a
spec:
  backoffLimit: 50
  template:
    spec:
      serviceAccount: pinniped-post-deploy-job-sa
      restartPolicy: Never
      containers:
      - name: pinniped-post-deploy
        image: projects.registry.vmware.com/tce/tanzu_core/addons/tkg-pinniped-post-deploy:v1.3.1
        imagePullPolicy: IfNotPresent
        command:
        - /tkg-pinniped-post-deploy-job
        - --jwtauthenticator-name=tkg-jwt-authenticator
        - --concierge-namespace=pinniped-concierge
        - --supervisor-svc-endpoint=https://<pinniped-supervisor-svc-host>:<port>
        - --supervisor-ca-bundle-data=LS0tLS1CRxxxxxxxxT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
        - --is-dex-required=False
        - --concierge-is-cluster-scoped=true
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped:view-pinnipedinfo
  namespace: kube-public
rules:
- apiGroups:
  - ""
  resourceNames:
  - pinniped-info
  resources:
  - configmaps
  verbs:
  - get
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped:view-pinnipedinfo
  namespace: kube-public
subjects:
- kind: User
  apiGroup: rbac.authorization.k8s.io
  name: system:anonymous
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pinniped:view-pinnipedinfo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-info-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-info-reader
subjects:
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-info-reader
rules:
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - awsclusters
  - vsphereclusters
  - azureclusters
  verbs:
  - get
