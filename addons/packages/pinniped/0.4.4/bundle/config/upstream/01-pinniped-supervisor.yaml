#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("@ytt:yaml", "yaml")
#@ load("/certificates.lib.yaml", "generate_dns_names", "get_certificate_with_params", "generate_self_signed_issuer", "certificate_generate_args", "generate_ca_issuer", "generate_ca_certificate")
#@ load("/libs/constants.lib.yaml", "pinniped_name", "pinniped_supervisor_namespace", "pinniped_cert_name", "pinniped_supervisor_svc_name", "pinniped_tls_secret_name")

#@ if data.values.tkg_cluster_role != "workload":
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: federationdomains.config.supervisor.pinniped.dev
spec:
  group: config.supervisor.pinniped.dev
  names:
    categories:
      - pinniped
    kind: FederationDomain
    listKind: FederationDomainList
    plural: federationdomains
    singular: federationdomain
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: FederationDomain describes the configuration of an OIDC provider.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec of the OIDC provider.
              properties:
                issuer:
                  description: "Issuer is the OIDC Provider's issuer, per the OIDC Discovery
                  Metadata document, as well as the identifier that it will use for
                  the iss claim in issued JWTs. This field will also be used as the
                  base URL for any endpoints used by the OIDC Provider (e.g., if your
                  issuer is https://example.com/foo, then your authorization endpoint
                  will look like https://example.com/foo/some/path/to/auth/endpoint).
                  \n See https://openid.net/specs/openid-connect-discovery-1_0.html#rfc.section.3
                  for more information."
                  minLength: 1
                  type: string
                tls:
                  description: TLS configures how this FederationDomain is served over
                    Transport Layer Security (TLS).
                  properties:
                    secretName:
                      description: "SecretName is an optional name of a Secret in the
                      same namespace, of type `kubernetes.io/tls`, which contains
                      the TLS serving certificate for the HTTPS endpoints served by
                      this FederationDomain. When provided, the TLS Secret named here
                      must contain keys named `tls.crt` and `tls.key` that contain
                      the certificate and private key to use for TLS. \n Server Name
                      Indication (SNI) is an extension to the Transport Layer Security
                      (TLS) supported by all major browsers. \n SecretName is required
                      if you would like to use different TLS certificates for issuers
                      of different hostnames. SNI requests do not include port numbers,
                      so all issuers with the same DNS hostname must use the same
                      SecretName value even if they have different port numbers. \n
                      SecretName is not required when you would like to use only the
                      HTTP endpoints (e.g. when terminating TLS at an Ingress). It
                      is also not required when you would like all requests to this
                      OIDC Provider's HTTPS endpoints to use the default TLS certificate,
                      which is configured elsewhere. \n When your Issuer URL's host
                      is an IP address, then this field is ignored. SNI does not work
                      for IP addresses."
                      type: string
                  type: object
              required:
                - issuer
              type: object
            status:
              description: Status of the OIDC provider.
              properties:
                lastUpdateTime:
                  description: LastUpdateTime holds the time at which the Status was
                    last updated. It is a pointer to get around some undesirable behavior
                    with respect to the empty metav1.Time value (see https://github.com/kubernetes/kubernetes/issues/86811).
                  format: date-time
                  type: string
                message:
                  description: Message provides human-readable details about the Status.
                  type: string
                secrets:
                  description: Secrets contains information about this OIDC Provider's
                    secrets.
                  properties:
                    jwks:
                      description: JWKS holds the name of the corev1.Secret in which
                        this OIDC Provider's signing/verification keys are stored. If
                        it is empty, then the signing/verification keys are either unknown
                        or they don't exist.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    stateEncryptionKey:
                      description: StateSigningKey holds the name of the corev1.Secret
                        in which this OIDC Provider's key for encrypting state parameters
                        is stored.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    stateSigningKey:
                      description: StateSigningKey holds the name of the corev1.Secret
                        in which this OIDC Provider's key for signing state parameters
                        is stored.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    tokenSigningKey:
                      description: TokenSigningKey holds the name of the corev1.Secret
                        in which this OIDC Provider's key for signing tokens is stored.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                  type: object
                status:
                  description: Status holds an enum that describes the state of this
                    OIDC Provider. Note that this Status can represent success or failure.
                  enum:
                    - Success
                    - Duplicate
                    - Invalid
                    - SameIssuerHostMustUseSameSecret
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ pinniped_supervisor_namespace()
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pinniped-supervisor
  namespace: #@ pinniped_supervisor_namespace()
  labels:
    app: pinniped-supervisor
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pinniped-supervisor-static-config
  namespace: #@ pinniped_supervisor_namespace()
  labels:
    app: pinniped-supervisor
data:
  #@yaml/text-templated-strings
  pinniped.yaml: |
    names:
      defaultTLSCertificateSecret: (@= pinniped_tls_secret_name() @)
    labels: {"app":"pinniped-supervisor"}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinniped-supervisor
  namespace: #@ pinniped_supervisor_namespace()
  labels:
    app: pinniped-supervisor
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pinniped-supervisor
  template:
    metadata:
      labels:
        app: pinniped-supervisor
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
      serviceAccountName: pinniped-supervisor
      containers:
        - name: pinniped-supervisor
          image: docker.io/getpinniped/pinniped-server:v0.4.4
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/pinniped-supervisor
          args:
            - /etc/podinfo
            - /etc/config/pinniped.yaml
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: podinfo
              mountPath: /etc/podinfo
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            timeoutSeconds: 15
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: config-volume
          configMap:
            name: pinniped-supervisor-static-config
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
              - path: namespace
                fieldRef:
                  fieldPath: metadata.namespace
              - path: name
                fieldRef:
                  fieldPath: metadata.name
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: pinniped-supervisor
                topologyKey: kubernetes.io/hostname


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: oidcidentityproviders.idp.supervisor.pinniped.dev
  labels:
    app: pinniped-supervisor
spec:
  group: idp.supervisor.pinniped.dev
  names:
    categories:
      - pinniped
      - pinniped-idp
      - pinniped-idps
    kind: OIDCIdentityProvider
    listKind: OIDCIdentityProviderList
    plural: oidcidentityproviders
    singular: oidcidentityprovider
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.issuer
          name: Issuer
          type: string
        - jsonPath: .status.phase
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OIDCIdentityProvider describes the configuration of an upstream OpenID Connect identity provider.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec for configuring the identity provider.
              properties:
                authorizationConfig:
                  description: AuthorizationConfig holds information about how to form the OAuth2 authorization request parameters to be used with this OIDC identity provider.
                  properties:
                    additionalScopes:
                      description: AdditionalScopes are the scopes in addition to "openid" that will be requested as part of the authorization request flow with an OIDC identity provider. By default only the "openid" scope will be requested.
                      items:
                        type: string
                      type: array
                  type: object
                claims:
                  description: Claims provides the names of token claims that will be used when inspecting an identity from this OIDC identity provider.
                  properties:
                    groups:
                      description: Groups provides the name of the token claim that will be used to ascertain the groups to which an identity belongs.
                      type: string
                    username:
                      description: Username provides the name of the token claim that will be used to ascertain an identity's username.
                      type: string
                  type: object
                client:
                  description: OIDCClient contains OIDC client information to be used used with this OIDC identity provider.
                  properties:
                    secretName:
                      description: SecretName contains the name of a namespace-local Secret object that provides the clientID and clientSecret for an OIDC client. If only the SecretName is specified in an OIDCClient struct, then it is expected that the Secret is of type "secrets.pinniped.dev/oidc-client" with keys "clientID" and "clientSecret".
                      type: string
                  required:
                    - secretName
                  type: object
                issuer:
                  description: Issuer is the issuer URL of this OIDC identity provider, i.e., where to fetch /.well-known/openid-configuration.
                  minLength: 1
                  pattern: ^https://
                  type: string
                tls:
                  description: TLS configuration for discovery/JWKS requests to the issuer.
                  properties:
                    certificateAuthorityData:
                      description: X.509 Certificate Authority (base64-encoded PEM bundle). If omitted, a default set of system roots will be trusted.
                      type: string
                  type: object
              required:
                - client
                - issuer
              type: object
            status:
              description: Status of the identity provider.
              properties:
                conditions:
                  description: Represents the observations of an identity provider's current state.
                  items:
                    description: Condition status of a resource (mirrored from the metav1.Condition type added in Kubernetes 1.19). In a future API version we can switch to using the upstream type. See https://github.com/kubernetes/apimachinery/blob/v0.19.0/pkg/apis/meta/v1/types.go#L1353-L1413.
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                phase:
                  default: Pending
                  description: Phase summarizes the overall status of the OIDCIdentityProvider.
                  enum:
                    - Pending
                    - Ready
                    - Error
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pinniped-supervisor
  namespace: #@ pinniped_supervisor_namespace()
  labels:
    app: pinniped-supervisor
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
      - delete
  - apiGroups:
      - config.supervisor.pinniped.dev
    resources:
      - federationdomains
    verbs:
      - update
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - oidcidentityproviders
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - idp.supervisor.pinniped.dev
    resources:
      - oidcidentityproviders/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
      - deployments
    verbs:
      - get

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pinniped-supervisor
  namespace: #@ pinniped_supervisor_namespace()
  labels:
    app: pinniped-supervisor
subjects:
  - kind: ServiceAccount
    name: pinniped-supervisor
    namespace: #@ pinniped_supervisor_namespace()
roleRef:
  kind: Role
  name: pinniped-supervisor
  apiGroup: rbac.authorization.k8s.io

#@ end
