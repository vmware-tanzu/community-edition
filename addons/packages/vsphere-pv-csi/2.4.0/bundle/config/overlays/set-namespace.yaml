#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")
#@ load("/values.star", "values")

#@overlay/match by=lambda key,l,r: ("metadata" in l) and ("namespace" in l["metadata"]),expects=9
---
metadata:
  namespace: #@ values.vspherePVCSI.namespace

#@overlay/match by=overlay.subset({"kind": "Namespace"})
---
metadata:
  name: #@ values.vspherePVCSI.namespace

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding", "metadata": {"name": "vsphere-csi-controller-binding"}}),expects=1
---
subjects:
#@overlay/match by=overlay.subset({"kind":"ServiceAccount","name":"vsphere-csi-controller"})
#@overlay/replace
- kind: ServiceAccount
  name: vsphere-csi-controller
  namespace: #@ values.vspherePVCSI.namespace

#@overlay/match by=overlay.subset({"kind": "RoleBinding", "metadata": {"name": "vsphere-csi-node-binding"}}),expects=1
---
subjects:
#@overlay/match by=overlay.subset({"kind":"ServiceAccount","name":"vsphere-csi-node"})
#@overlay/replace
- kind: ServiceAccount
  name: vsphere-csi-node
  namespace: #@ values.vspherePVCSI.namespace

#@ deployments = overlay.subset({"kind": "Deployment"})
#@ daemonsets = overlay.subset({"kind": "DaemonSet"})
#@overlay/match by=overlay.or_op(deployments,daemonsets),expects=2
---
spec:
  template:
    spec:
      containers:
        #@ vsphere_csi_controller = overlay.subset({"name":"vsphere-csi-controller"})
        #@ vsphere_syncer = overlay.subset({"name":"vsphere-syncer"})
        #@ vsphere_csi_node = overlay.subset({"name":"vsphere-csi-node"})
        #@overlay/match by=overlay.or_op(vsphere_csi_controller,vsphere_syncer,vsphere_csi_node),expects="1+"
      -
        env:
          #@overlay/match by=overlay.subset({"name": "CSI_NAMESPACE"})
          #@overlay/replace
          - name: CSI_NAMESPACE
            value: #@ values.vspherePVCSI.namespace
