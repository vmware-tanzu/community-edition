name: Check build

on:
  pull_request:
    branches:
      - main
    types:
      - assigned
      - opened
      - synchronize
      - reopened

jobs:
  checkbuild:
    name: Check Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
        id: go

      - name: Config credentials
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          git config --global url."https://git:$GH_ACCESS_TOKEN@github.com".insteadOf "https://github.com"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Restore Go Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get Pull Request ID
        id: get_pullrequest
        run: echo ::set-output name=PULL_NUMBER::$(echo "$GITHUB_REF" | awk -F / '{print $3}')

      - name: Get dependencies
        run: |
          for i in $(find . -type d); do
            if [[ -f "${i}/go.mod" ]]; then
              pushd $i
                go get -v -t -d ./...
              popd
            fi
          done

      - name: Build
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: make release

      - name: Upload Artifacts to PR Bucket
        id: upload-artifacts-staging
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ./artifacts
          destination: tce-cli-plugins-staging/build-pullrequest/${{ steps.get_pullrequest.outputs.PULL_NUMBER }}
          credentials: ${{ secrets.GCP_BUCKET_SA }}

      - name: Comment with Artifact Download Location
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'You can download your pull request artifacts by deleting your existing TCE bucket by running: `tanzu plugin repo delete tce`, then updating the TCE bucket pointer to the staging bucket by running: `tanzu plugin repo add --name tce --gcp-bucket-name tce-cli-plugins-staging --gcp-root-path build-pullrequest/${{ steps.get_pullrequest.outputs.PULL_NUMBER }}/artifacts` and then doing a `tanzu plugin upgrade YOUR_PLUGIN_NAME`'
            })
