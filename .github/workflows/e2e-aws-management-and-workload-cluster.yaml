name: E2E Test - AWS Management and Workload Cluster

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - release-*
    paths:
      - "**.go"
      - "cli/cmd/plugin/**/go.mod"
      - "**.sh"
      - ".github/workflows/e2e-aws-management-and-workload-cluster.yaml"
    tags-ignore:
      - "**"

jobs:
  setup-runner:
    name: Start self-hosted EC2 runner
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    runs-on: ubuntu-latest
    outputs:
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 runner
        id: start-ec2-runner
        shell: bash
        run: |
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_RUN_ATTEMPT: ${GITHUB_RUN_ATTEMPT}"
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
          echo ::set-output name=ec2-instance-id::${INSTANCE_NAME}
  e2e-aws-managed-test:
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    name: E2E AWS Management and Workload Cluster Test
    needs: setup-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
        id: go

      - name: Cleaning up Github Actions runner
        run: |
          df -h
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "/usr/local/share/boost"
          df -h

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run AWS Management and Workload Cluster E2E Tests
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_B64ENCODED_CREDENTIALS: ${{ secrets.AWS_B64ENCODED_CREDENTIALS }}
          AWS_SSH_KEY_NAME: ${{ secrets.AWS_SSH_KEY_NAME }}
        run: |
          # Workaround for issue https://github.com/kubernetes-sigs/kind/issues/2240
          sudo sysctl net/netfilter/nf_conntrack_max=131072

          go env -w GOFLAGS=-mod=mod
          make aws-management-and-workload-cluster-e2e-test

      - name: Collect tanzu diagnostics data
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: diagnostics-data
          path: |
            bootstrap.*.diagnostics.tar.gz
            management-cluster.*.diagnostics.tar.gz
            workload-cluster.*.diagnostics.tar.gz
  teardown-runner:
    name: Stop self-hosted EC2 runner
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    needs:
      - setup-runner # required to get output from the setup-runner job
      - e2e-aws-managed-test # required to wait when the main job is done
    runs-on: ubuntu-latest
    steps:
      - name: Stop EC2 runner
        id: stop-ec2-runner
        shell: bash
        run: |
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_RUN_ATTEMPT: ${GITHUB_RUN_ATTEMPT}"
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
