---
name: E2E Test - Unmanaged Cluster

on:
  repository_dispatch:
    types: [daily-build]

  pull_request_target:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - cli/cmd/plugin/unmanaged-cluster

  workflow_dispatch:
  push:
    branches:
      - main
      - release-*

    paths:
      - "cli/cmd/plugin/unmanaged-cluster"
      - ".github/workflows/e2e-unmanaged-cluster.yaml"
      - "Makefile"

    tags-ignore:
      - "**"

jobs:
  setup-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 runner
        id: start-ec2-runner
        shell: bash
        run: |
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_RUN_ATTEMPT: ${GITHUB_RUN_ATTEMPT}"
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
          echo ::set-output name=ec2-instance-id::${INSTANCE_NAME}

  e2e-unmanaged-cluster-test:
    name: E2E Unmanaged Cluster Test
    needs: setup-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
        id: go

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run Unmanaged Cluster E2E Test
        run: |
          make unmanaged-cluster-e2e-test

      - name: Collect tanzu diagnostics data
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: diagnostics-data
          path: |
            bootstrap.*.diagnostics.tar.gz
            management-cluster.*.diagnostics.tar.gz
            workload-cluster.*.diagnostics.tar.gz

  teardown-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - setup-runner # required to get output from the setup-runner job
      - e2e-unmanaged-cluster-test # required to wait when the main job is done
    runs-on: ubuntu-latest
    steps:
      - name: Stop EC2 runner
        id: stop-ec2-runner
        shell: bash
        run: |
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "GITHUB_RUN_NUMBER: ${GITHUB_RUN_NUMBER}"
          echo "GITHUB_RUN_ATTEMPT: ${GITHUB_RUN_ATTEMPT}"
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
