name: Check - Main (All tests)
on:
  push:
    branches:
      - main
    tags-ignore:
      - "**"

jobs:
  setup-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 runner
        id: start-ec2-runner
        shell: bash
        run: |
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
          echo ::set-output name=ec2-instance-id::${INSTANCE_NAME}
  build-release:
    name: Build Release based on Main
    needs: setup-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
        id: go
      - name: Check out code
        uses: actions/checkout@v1
      - name: Restore Go Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run all checks
        shell: bash
        run: |
          make check
      - name: Get dependencies
        shell: bash
        run: |
          make get-deps
      - name: Build
        shell: bash
        run: |
          make ensure-deps
          make release
      - name: Install
        shell: bash
        run: |
          cd `find ./build -type d -name "tce-linux-amd64-*" | xargs -n1 echo -n`
          ALLOW_INSTALL_AS_ROOT=true ./install.sh
  create-cluster:
    name: Create Cluster
    needs:
      - setup-runner # required to start the main job when the runner is ready
      - build-release
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Create Cluster
        run: CLUSTER_PLAN=dev tanzu standalone-cluster create mytest -i docker -v 10
      - name: Check Create Cluster
        shell: bash
        run: |
          ./hack/runner/check-setup.sh
  delete-cluster:
    name: Delete Cluster
    needs:
      - setup-runner # required to start the main job when the runner is ready
      - create-cluster
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Delete Cluster
        shell: bash
        run: tanzu standalone-cluster delete mytest --yes -v 10
      - name: Check Delete Cluster
        shell: bash
        run: |
          ./hack/runner/check-teardown.sh
