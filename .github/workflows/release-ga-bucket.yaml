name: Release - Upload GA Bits to Buckets

on:
  push:
    branches:
      - "!not_activated_on_branches!*"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "!*-*"

jobs:
  setup-runner:
    name: Start self-hosted EC2 runner
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    runs-on: ubuntu-latest
    outputs:
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Start EC2 runner
        id: start-ec2-runner
        shell: bash
        run: |
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
          echo ::set-output name=ec2-instance-id::${INSTANCE_NAME}
  build-release:
    name: GA Release
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    needs: setup-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.setup-runner.outputs.ec2-instance-id }} # run the job on the newly created runner
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
        id: go
      - name: Config credentials
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_ACCESS_TOKEN }}
        shell: bash
        run: |
          git config --global pull.rebase true
          git config --global url."https://git:$GITHUB_TOKEN@github.com".insteadOf "https://github.com"
      - name: Check out code
        uses: actions/checkout@v1
      - name: Restore Go Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Get the Tag
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Get dependencies
        shell: bash
        run: |
          make get-deps
      - name: Build
        shell: bash
        run: |
          make ensure-deps
          make release-buckets
      - name: Upload TCE Artifacts to Staging Bucket
        id: upload-artifacts-staging
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: ./artifacts
          destination: tce-cli-plugins-staging
          credentials: ${{ secrets.GCP_BUCKET_SA }}
      - name: Upload TCE Artifacts to Update Bucket
        id: upload-tce-artifacts-update
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: ./artifacts
          destination: tce-cli-plugins
          credentials: ${{ secrets.GCP_BUCKET_SA }}
      - name: Upload TF Artifacts to Update Bucket
        id: upload-tf-artifacts-update
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: /tmp/tce-scratch-space/tanzu-framework/artifacts
          destination: tce-framework-cli-plugins/artifacts
          credentials: ${{ secrets.GCP_BUCKET_SA }}
          parent: false
      - name: Upload TF Admin Artifacts to Update Bucket
        id: upload-tf-artifacts-admin-update
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: /tmp/tce-scratch-space/tanzu-framework/artifacts-admin
          destination: tce-framework-cli-plugins-admin/artifacts-admin
          credentials: ${{ secrets.GCP_BUCKET_SA }}
          parent: false
      - name: Prune Release Buckets
        env:
          TCE_CI_BUILD: true
        shell: bash
        run: make prune-buckets
      - name: Upload TCE Artifacts to Release Bucket
        id: upload-tce-artifacts-release
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: ./artifacts
          destination: tce-tanzu-cli-plugins
          credentials: ${{ secrets.GCP_BUCKET_SA }}
      - name: Upload TF Artifacts to Release Bucket
        id: upload-tf-artifacts-release
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: /tmp/tce-scratch-space/tanzu-framework/artifacts
          destination: tce-tanzu-cli-framework/artifacts
          credentials: ${{ secrets.GCP_BUCKET_SA }}
          parent: false
      - name: Upload TF Artifacts-Admin to Release Bucket
        id: upload-tf-artifacts-admin-release
        uses: google-github-actions/upload-cloud-storage@v0.5.0
        with:
          path: /tmp/tce-scratch-space/tanzu-framework/artifacts-admin
          destination: tce-tanzu-cli-framework-admin/artifacts-admin
          credentials: ${{ secrets.GCP_BUCKET_SA }}
          parent: false
  teardown-runner:
    name: Stop self-hosted EC2 runner
    # Only run this job if we're in the main repo, not a fork.
    if: github.repository == 'vmware-tanzu/community-edition'
    needs:
      - setup-runner # required to get output from the setup-runner job
      - build-release # required to wait when the main job is done
    runs-on: ubuntu-latest
    steps:
      - name: Stop EC2 runner
        id: stop-ec2-runner
        shell: bash
        run: |
          INSTANCE_NAME="id-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}"
          echo "INSTANCE_NAME: ${INSTANCE_NAME}"
