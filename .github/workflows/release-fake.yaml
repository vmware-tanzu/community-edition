name: Create Fake Release (Testing)

on:
  push:
    branches:
      - "!not_activated_on_branches!*"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-fake.[0-9]+"

jobs:
  build:
    name: Fake Release (Testing)
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"
        id: go

      - name: Config credentials
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          git config --global pull.rebase true
          git config --global url."https://git:$GH_ACCESS_TOKEN@github.com".insteadOf "https://github.com"

      - name: Check out code
        uses: actions/checkout@v1

      - name: Restore Go Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get the Tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Get dependencies
        run: |
          make get-deps

      - name: Generate release
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        run: |
          make ensure-deps
          make release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changelog:
            - THIS IS JUST A PLACE HOLDER
            - THIS IS JUST A PLACE HOLDER
          draft: true
          prerelease: true

      - name: Upload Linux AMD64 Asset
        id: upload-linux-amd64-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tce-linux-amd64-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: tce-linux-amd64-${{ steps.get_version.outputs.VERSION }}-unsigned.tar.gz
          asset_content_type: application/gzip

      - name: Upload Darwin AMD64 Asset
        id: upload-darwin-amd64-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tce-darwin-amd64-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: tce-darwin-amd64-${{ steps.get_version.outputs.VERSION }}-unsigned.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows AMD64 Asset
        id: upload-windows-amd64-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/tce-windows-amd64-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: tce-windows-amd64-${{ steps.get_version.outputs.VERSION }}-unsigned.tar.gz
          asset_content_type: application/gzip

      - name: Checkout for Update
        uses: actions/checkout@v1

      - name: Commit Next Dev Version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          ACTUAL_COMMIT_SHA: ${{ github.sha }}
        run: make cut-release

      - name: Upload Cayman Trigger Asset
        id: upload-cayman-trigger-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./cayman_trigger.txt
          asset_name: cayman_trigger.txt
          asset_content_type: text/plain
          
