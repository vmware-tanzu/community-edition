apiVersion: v1
kind: Namespace
metadata:
  name: tanzu-security
---
apiVersion: v1
kind: Service
metadata:
  name: cert-manager
  namespace: "tanzu-security"
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 9402
      targetPort: 9402
  selector:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
---
apiVersion: v1
kind: Service
metadata:
  name: cert-manager-webhook
  namespace: "tanzu-security"
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 6443
  selector:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-cainjector
  namespace: "tanzu-security"
  labels:
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: cert-manager
    spec:
      serviceAccountName: cert-manager-cainjector
      containers:
        - name: cainjector
          image: "vmware-docker-tkg.bintray.io/cert-manager/cert-manager-cainjector:v0.11.0_vmware.1"
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --leader-election-namespace=kube-system
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
              runAsUser: 65532
          resources: {'requests': {'cpu': '25m', 'memory': '32Mi'}, 'limits': {'cpu': '50m', 'memory': '64Mi'}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: "tanzu-security"
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-manager
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: cert-manager
      containers:
        - name: cert-manager
          image: "vmware-docker-tkg.bintray.io/cert-manager/cert-manager-controller:v0.11.0_vmware.1"
          securityContext:
              runAsUser: 65532
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=tanzu-security
            - --leader-election-namespace=kube-system
            - --webhook-namespace=$(POD_NAMESPACE)
            - --webhook-ca-secret=cert-manager-webhook-ca
            - --webhook-serving-secret=cert-manager-webhook-tls
            - --webhook-dns-names=cert-manager-webhook,cert-manager-webhook.tanzu-security,cert-manager-webhook.tanzu-security.svc
          ports:
            - containerPort: 9402
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 500m
              memory: 64Mi
            requests:
              cpu: 250m
              memory: 32Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-webhook
  namespace: "tanzu-security"
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: cert-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: cert-manager
    spec:
      serviceAccountName: cert-manager-webhook
      containers:
        - name: cert-manager
          image: "vmware-docker-tkg.bintray.io/cert-manager/cert-manager-webhook:v0.11.0_vmware.1"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 65532
          args:
            - --v=2
            - --secure-port=6443
            - --tls-cert-file=/certs/tls.crt
            - --tls-private-key-file=/certs/tls.key
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 32Mi
          volumeMounts:
            - name: certs
              mountPath: /certs
      volumes:
        - name: certs
          secret:
            secretName: cert-manager-webhook-tls
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.webhook.cert-manager.io
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
  annotations:
    cert-manager.io/inject-ca-from-secret: "tanzu-security/cert-manager-webhook-tls"
spec:
  group: webhook.cert-manager.io
  groupPriorityMinimum: 1000
  versionPriority: 15
  service:
    name: cert-manager-webhook
    namespace: "tanzu-security"
  version: v1beta1
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: cert-manager-webhook
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
  annotations:
    cert-manager.io/inject-apiserver-ca: "true"
webhooks:
  - name: webhook.cert-manager.io
    rules:
      - apiGroups:
          - "cert-manager.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - certificates
          - issuers
          - clusterissuers
          - orders
          - challenges
          - certificaterequests
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/webhook.cert-manager.io/v1beta1/mutations
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: cert-manager-webhook
  labels:
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
  annotations:
    cert-manager.io/inject-apiserver-ca: "true"
webhooks:
  - name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
        - key: "cert-manager.io/disable-validation"
          operator: "NotIn"
          values:
            - "true"
        - key: "name"
          operator: "NotIn"
          values:
            - cert-manager
    rules:
      - apiGroups:
          - "cert-manager.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - certificates
          - issuers
          - clusterissuers
          - certificaterequests
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/webhook.cert-manager.io/v1beta1/validations
