#syntax=docker/dockerfile:1.4

# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

# DOWNLOAD 3rd PARTY BINARIES
FROM bitnami/minideb:bullseye

ARG TARGETARCH

# See https://kubernetes.io/releases/
# See https://storage.googleapis.com/kubernetes-release/release/stable.txt
ARG KUBECTL_VERSION=v1.21.9
ARG KUBECTL_AMD64_HASH=195d5387f2a6ca7b8ab5c2134b4b6cc27f29372f54b771947ba7c18ee983fbe6
ARG KUBECTL_ARM64_HASH=6e2893b5de590fd9587ba327c048e5318e9e12e2acdc5a83c995c57ae822e6e4

# See https://github.com/vmware-tanzu/carvel/blob/develop/site/static/install.sh
# Then get the permalink
ARG CARVEL_PERMALINK=9fc8219c659e5665e5002bcb89b98b057cf49a4f

# See https://github.com/docker/compose/releases
ARG DOCKER_COMPOSE_VERSION=v2.2.3
ARG DOCKER_COMPOSE_AMD64_HASH=f15a7cd54a85f760a8ece92da63fb85b93036c72ead8056391b8a3fe9dc73134
ARG DOCKER_COMPOSE_ARM64_HASH=acdef6cd8ade7ade54037846be2e8291f3a0f735a5c89460a79d8a28747c0f48

# Install docker-ce-cli (see https://docs.docker.com/engine/release-notes/)
RUN <<EOT
    apt update
    apt install -y ca-certificates curl gnupg lsb-release libdigest-sha-perl
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=${TARGETARCH} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list
    apt update
    apt install -y docker-ce-cli
EOT

# Install kubectl
RUN <<EOT
    curl -L --silent --show-error --fail -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${TARGETARCH}/kubectl
    (if test "${TARGETARCH}" = "amd64"; then echo "${KUBECTL_AMD64_HASH} /usr/local/bin/kubectl" | sha256sum --check --status; fi)
    (if test "${TARGETARCH}" = "arm64"; then echo "${KUBECTL_ARM64_HASH} /usr/local/bin/kubectl" | sha256sum --check --status; fi)
    chmod +x /usr/local/bin/kubectl
EOT

# Install Carvel tools
RUN <<EOT
    curl -L --silent --show-error --fail -o /tmp/carvel.sh https://raw.githubusercontent.com/vmware-tanzu/carvel/${CARVEL_PERMALINK}/site/static/install.sh
    export K14SIO_INSTALL_BIN_DIR=/usr/local/bin
    bash -x /tmp/carvel.sh
    rm /tmp/carvel.sh
EOT

# Install Docker Compose
RUN <<EOT
    (if test "${TARGETARCH}" = "amd64"; then curl -L --silent --show-error --fail -o /usr/bin/docker-compose https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-linux-x86_64 && echo "${DOCKER_COMPOSE_AMD64_HASH} /usr/bin/docker-compose" | sha256sum --check --status; fi)
    (if test "${TARGETARCH}" = "arm64"; then curl -L --silent --show-error --fail -o /usr/bin/docker-compose https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-linux-aarch64 && echo "${DOCKER_COMPOSE_ARM64_HASH} /usr/bin/docker-compose" | sha256sum --check --status; fi)
    chmod +x /usr/bin/docker-compose
EOT
