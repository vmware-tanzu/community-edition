// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AWSSubnet a w s subnet
// swagger:model AWSSubnet
type AWSSubnet struct {

	// availability zone Id
	AvailabilityZoneID string `json:"availabilityZoneId,omitempty"`

	// availability zone name
	AvailabilityZoneName string `json:"availabilityZoneName,omitempty"`

	// cidr
	Cidr string `json:"cidr,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is public
	// Required: true
	IsPublic *bool `json:"isPublic"`

	// state
	State string `json:"state,omitempty"`

	// vpc Id
	VpcID string `json:"vpcId,omitempty"`
}

// Validate validates this a w s subnet
func (m *AWSSubnet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsPublic(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AWSSubnet) validateIsPublic(formats strfmt.Registry) error {

	if err := validate.Required("isPublic", "body", m.IsPublic); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AWSSubnet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AWSSubnet) UnmarshalBinary(b []byte) error {
	var res AWSSubnet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
