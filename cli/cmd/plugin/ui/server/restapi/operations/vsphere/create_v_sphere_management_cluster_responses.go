// Code generated by go-swagger; DO NOT EDIT.

package vsphere

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// CreateVSphereManagementClusterOKCode is the HTTP code returned for type CreateVSphereManagementClusterOK
const CreateVSphereManagementClusterOKCode int = 200

/*CreateVSphereManagementClusterOK Creating management cluster started successfully

swagger:response createVSphereManagementClusterOK
*/
type CreateVSphereManagementClusterOK struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewCreateVSphereManagementClusterOK creates CreateVSphereManagementClusterOK with default headers values
func NewCreateVSphereManagementClusterOK() *CreateVSphereManagementClusterOK {

	return &CreateVSphereManagementClusterOK{}
}

// WithPayload adds the payload to the create v sphere management cluster o k response
func (o *CreateVSphereManagementClusterOK) WithPayload(payload string) *CreateVSphereManagementClusterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create v sphere management cluster o k response
func (o *CreateVSphereManagementClusterOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVSphereManagementClusterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateVSphereManagementClusterBadRequestCode is the HTTP code returned for type CreateVSphereManagementClusterBadRequest
const CreateVSphereManagementClusterBadRequestCode int = 400

/*CreateVSphereManagementClusterBadRequest Bad request

swagger:response createVSphereManagementClusterBadRequest
*/
type CreateVSphereManagementClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVSphereManagementClusterBadRequest creates CreateVSphereManagementClusterBadRequest with default headers values
func NewCreateVSphereManagementClusterBadRequest() *CreateVSphereManagementClusterBadRequest {

	return &CreateVSphereManagementClusterBadRequest{}
}

// WithPayload adds the payload to the create v sphere management cluster bad request response
func (o *CreateVSphereManagementClusterBadRequest) WithPayload(payload *models.Error) *CreateVSphereManagementClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create v sphere management cluster bad request response
func (o *CreateVSphereManagementClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVSphereManagementClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateVSphereManagementClusterUnauthorizedCode is the HTTP code returned for type CreateVSphereManagementClusterUnauthorized
const CreateVSphereManagementClusterUnauthorizedCode int = 401

/*CreateVSphereManagementClusterUnauthorized Incorrect credentials

swagger:response createVSphereManagementClusterUnauthorized
*/
type CreateVSphereManagementClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVSphereManagementClusterUnauthorized creates CreateVSphereManagementClusterUnauthorized with default headers values
func NewCreateVSphereManagementClusterUnauthorized() *CreateVSphereManagementClusterUnauthorized {

	return &CreateVSphereManagementClusterUnauthorized{}
}

// WithPayload adds the payload to the create v sphere management cluster unauthorized response
func (o *CreateVSphereManagementClusterUnauthorized) WithPayload(payload *models.Error) *CreateVSphereManagementClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create v sphere management cluster unauthorized response
func (o *CreateVSphereManagementClusterUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVSphereManagementClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateVSphereManagementClusterInternalServerErrorCode is the HTTP code returned for type CreateVSphereManagementClusterInternalServerError
const CreateVSphereManagementClusterInternalServerErrorCode int = 500

/*CreateVSphereManagementClusterInternalServerError Internal server error

swagger:response createVSphereManagementClusterInternalServerError
*/
type CreateVSphereManagementClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateVSphereManagementClusterInternalServerError creates CreateVSphereManagementClusterInternalServerError with default headers values
func NewCreateVSphereManagementClusterInternalServerError() *CreateVSphereManagementClusterInternalServerError {

	return &CreateVSphereManagementClusterInternalServerError{}
}

// WithPayload adds the payload to the create v sphere management cluster internal server error response
func (o *CreateVSphereManagementClusterInternalServerError) WithPayload(payload *models.Error) *CreateVSphereManagementClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create v sphere management cluster internal server error response
func (o *CreateVSphereManagementClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateVSphereManagementClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
