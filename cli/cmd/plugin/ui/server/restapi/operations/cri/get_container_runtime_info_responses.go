// Code generated by go-swagger; DO NOT EDIT.

package cri

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// GetContainerRuntimeInfoOKCode is the HTTP code returned for type GetContainerRuntimeInfoOK
const GetContainerRuntimeInfoOKCode int = 200

/*GetContainerRuntimeInfoOK Successful retrieval of container runtime information.

swagger:response getContainerRuntimeInfoOK
*/
type GetContainerRuntimeInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.RuntimeInfo `json:"body,omitempty"`
}

// NewGetContainerRuntimeInfoOK creates GetContainerRuntimeInfoOK with default headers values
func NewGetContainerRuntimeInfoOK() *GetContainerRuntimeInfoOK {

	return &GetContainerRuntimeInfoOK{}
}

// WithPayload adds the payload to the get container runtime info o k response
func (o *GetContainerRuntimeInfoOK) WithPayload(payload *models.RuntimeInfo) *GetContainerRuntimeInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get container runtime info o k response
func (o *GetContainerRuntimeInfoOK) SetPayload(payload *models.RuntimeInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetContainerRuntimeInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetContainerRuntimeInfoBadRequestCode is the HTTP code returned for type GetContainerRuntimeInfoBadRequest
const GetContainerRuntimeInfoBadRequestCode int = 400

/*GetContainerRuntimeInfoBadRequest Bad request

swagger:response getContainerRuntimeInfoBadRequest
*/
type GetContainerRuntimeInfoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetContainerRuntimeInfoBadRequest creates GetContainerRuntimeInfoBadRequest with default headers values
func NewGetContainerRuntimeInfoBadRequest() *GetContainerRuntimeInfoBadRequest {

	return &GetContainerRuntimeInfoBadRequest{}
}

// WithPayload adds the payload to the get container runtime info bad request response
func (o *GetContainerRuntimeInfoBadRequest) WithPayload(payload *models.Error) *GetContainerRuntimeInfoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get container runtime info bad request response
func (o *GetContainerRuntimeInfoBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetContainerRuntimeInfoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetContainerRuntimeInfoInternalServerErrorCode is the HTTP code returned for type GetContainerRuntimeInfoInternalServerError
const GetContainerRuntimeInfoInternalServerErrorCode int = 500

/*GetContainerRuntimeInfoInternalServerError Internal server error

swagger:response getContainerRuntimeInfoInternalServerError
*/
type GetContainerRuntimeInfoInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetContainerRuntimeInfoInternalServerError creates GetContainerRuntimeInfoInternalServerError with default headers values
func NewGetContainerRuntimeInfoInternalServerError() *GetContainerRuntimeInfoInternalServerError {

	return &GetContainerRuntimeInfoInternalServerError{}
}

// WithPayload adds the payload to the get container runtime info internal server error response
func (o *GetContainerRuntimeInfoInternalServerError) WithPayload(payload *models.Error) *GetContainerRuntimeInfoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get container runtime info internal server error response
func (o *GetContainerRuntimeInfoInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetContainerRuntimeInfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
