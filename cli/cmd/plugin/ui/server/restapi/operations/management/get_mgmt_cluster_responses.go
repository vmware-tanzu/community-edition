// Code generated by go-swagger; DO NOT EDIT.

package management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// GetMgmtClusterOKCode is the HTTP code returned for type GetMgmtClusterOK
const GetMgmtClusterOKCode int = 200

/*GetMgmtClusterOK Management cluster details.

swagger:response getMgmtClusterOK
*/
type GetMgmtClusterOK struct {

	/*
	  In: Body
	*/
	Payload *models.ManagementCluster `json:"body,omitempty"`
}

// NewGetMgmtClusterOK creates GetMgmtClusterOK with default headers values
func NewGetMgmtClusterOK() *GetMgmtClusterOK {

	return &GetMgmtClusterOK{}
}

// WithPayload adds the payload to the get mgmt cluster o k response
func (o *GetMgmtClusterOK) WithPayload(payload *models.ManagementCluster) *GetMgmtClusterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get mgmt cluster o k response
func (o *GetMgmtClusterOK) SetPayload(payload *models.ManagementCluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMgmtClusterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMgmtClusterBadRequestCode is the HTTP code returned for type GetMgmtClusterBadRequest
const GetMgmtClusterBadRequestCode int = 400

/*GetMgmtClusterBadRequest Bad request

swagger:response getMgmtClusterBadRequest
*/
type GetMgmtClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMgmtClusterBadRequest creates GetMgmtClusterBadRequest with default headers values
func NewGetMgmtClusterBadRequest() *GetMgmtClusterBadRequest {

	return &GetMgmtClusterBadRequest{}
}

// WithPayload adds the payload to the get mgmt cluster bad request response
func (o *GetMgmtClusterBadRequest) WithPayload(payload *models.Error) *GetMgmtClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get mgmt cluster bad request response
func (o *GetMgmtClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMgmtClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMgmtClusterUnauthorizedCode is the HTTP code returned for type GetMgmtClusterUnauthorized
const GetMgmtClusterUnauthorizedCode int = 401

/*GetMgmtClusterUnauthorized Incorrect credentials

swagger:response getMgmtClusterUnauthorized
*/
type GetMgmtClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMgmtClusterUnauthorized creates GetMgmtClusterUnauthorized with default headers values
func NewGetMgmtClusterUnauthorized() *GetMgmtClusterUnauthorized {

	return &GetMgmtClusterUnauthorized{}
}

// WithPayload adds the payload to the get mgmt cluster unauthorized response
func (o *GetMgmtClusterUnauthorized) WithPayload(payload *models.Error) *GetMgmtClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get mgmt cluster unauthorized response
func (o *GetMgmtClusterUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMgmtClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMgmtClusterInternalServerErrorCode is the HTTP code returned for type GetMgmtClusterInternalServerError
const GetMgmtClusterInternalServerErrorCode int = 500

/*GetMgmtClusterInternalServerError Internal server error

swagger:response getMgmtClusterInternalServerError
*/
type GetMgmtClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMgmtClusterInternalServerError creates GetMgmtClusterInternalServerError with default headers values
func NewGetMgmtClusterInternalServerError() *GetMgmtClusterInternalServerError {

	return &GetMgmtClusterInternalServerError{}
}

// WithPayload adds the payload to the get mgmt cluster internal server error response
func (o *GetMgmtClusterInternalServerError) WithPayload(payload *models.Error) *GetMgmtClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get mgmt cluster internal server error response
func (o *GetMgmtClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMgmtClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
