// Code generated by go-swagger; DO NOT EDIT.

package management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteMgmtClusterHandlerFunc turns a function with the right signature into a delete mgmt cluster handler
type DeleteMgmtClusterHandlerFunc func(DeleteMgmtClusterParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteMgmtClusterHandlerFunc) Handle(params DeleteMgmtClusterParams) middleware.Responder {
	return fn(params)
}

// DeleteMgmtClusterHandler interface for that can handle valid delete mgmt cluster params
type DeleteMgmtClusterHandler interface {
	Handle(DeleteMgmtClusterParams) middleware.Responder
}

// NewDeleteMgmtCluster creates a new http.Handler for the delete mgmt cluster operation
func NewDeleteMgmtCluster(ctx *middleware.Context, handler DeleteMgmtClusterHandler) *DeleteMgmtCluster {
	return &DeleteMgmtCluster{Context: ctx, Handler: handler}
}

/*DeleteMgmtCluster swagger:route DELETE /api/management/{managementClusterName} management deleteMgmtCluster

Delete a management cluster.

*/
type DeleteMgmtCluster struct {
	Context *middleware.Context
	Handler DeleteMgmtClusterHandler
}

func (o *DeleteMgmtCluster) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteMgmtClusterParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
