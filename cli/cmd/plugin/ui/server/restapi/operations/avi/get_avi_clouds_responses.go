// Code generated by go-swagger; DO NOT EDIT.

package avi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// GetAviCloudsOKCode is the HTTP code returned for type GetAviCloudsOK
const GetAviCloudsOKCode int = 200

/*GetAviCloudsOK Successful retrieval of Avi load balancer clouds

swagger:response getAviCloudsOK
*/
type GetAviCloudsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.AviCloud `json:"body,omitempty"`
}

// NewGetAviCloudsOK creates GetAviCloudsOK with default headers values
func NewGetAviCloudsOK() *GetAviCloudsOK {

	return &GetAviCloudsOK{}
}

// WithPayload adds the payload to the get avi clouds o k response
func (o *GetAviCloudsOK) WithPayload(payload []*models.AviCloud) *GetAviCloudsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get avi clouds o k response
func (o *GetAviCloudsOK) SetPayload(payload []*models.AviCloud) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAviCloudsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.AviCloud, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAviCloudsBadRequestCode is the HTTP code returned for type GetAviCloudsBadRequest
const GetAviCloudsBadRequestCode int = 400

/*GetAviCloudsBadRequest Bad request

swagger:response getAviCloudsBadRequest
*/
type GetAviCloudsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAviCloudsBadRequest creates GetAviCloudsBadRequest with default headers values
func NewGetAviCloudsBadRequest() *GetAviCloudsBadRequest {

	return &GetAviCloudsBadRequest{}
}

// WithPayload adds the payload to the get avi clouds bad request response
func (o *GetAviCloudsBadRequest) WithPayload(payload *models.Error) *GetAviCloudsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get avi clouds bad request response
func (o *GetAviCloudsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAviCloudsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAviCloudsUnauthorizedCode is the HTTP code returned for type GetAviCloudsUnauthorized
const GetAviCloudsUnauthorizedCode int = 401

/*GetAviCloudsUnauthorized Incorrect credentials

swagger:response getAviCloudsUnauthorized
*/
type GetAviCloudsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAviCloudsUnauthorized creates GetAviCloudsUnauthorized with default headers values
func NewGetAviCloudsUnauthorized() *GetAviCloudsUnauthorized {

	return &GetAviCloudsUnauthorized{}
}

// WithPayload adds the payload to the get avi clouds unauthorized response
func (o *GetAviCloudsUnauthorized) WithPayload(payload *models.Error) *GetAviCloudsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get avi clouds unauthorized response
func (o *GetAviCloudsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAviCloudsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAviCloudsInternalServerErrorCode is the HTTP code returned for type GetAviCloudsInternalServerError
const GetAviCloudsInternalServerErrorCode int = 500

/*GetAviCloudsInternalServerError Internal server error

swagger:response getAviCloudsInternalServerError
*/
type GetAviCloudsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAviCloudsInternalServerError creates GetAviCloudsInternalServerError with default headers values
func NewGetAviCloudsInternalServerError() *GetAviCloudsInternalServerError {

	return &GetAviCloudsInternalServerError{}
}

// WithPayload adds the payload to the get avi clouds internal server error response
func (o *GetAviCloudsInternalServerError) WithPayload(payload *models.Error) *GetAviCloudsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get avi clouds internal server error response
func (o *GetAviCloudsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAviCloudsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
