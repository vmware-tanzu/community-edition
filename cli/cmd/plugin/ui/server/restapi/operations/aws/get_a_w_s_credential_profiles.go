// Code generated by go-swagger; DO NOT EDIT.

package aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAWSCredentialProfilesHandlerFunc turns a function with the right signature into a get a w s credential profiles handler
type GetAWSCredentialProfilesHandlerFunc func(GetAWSCredentialProfilesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAWSCredentialProfilesHandlerFunc) Handle(params GetAWSCredentialProfilesParams) middleware.Responder {
	return fn(params)
}

// GetAWSCredentialProfilesHandler interface for that can handle valid get a w s credential profiles params
type GetAWSCredentialProfilesHandler interface {
	Handle(GetAWSCredentialProfilesParams) middleware.Responder
}

// NewGetAWSCredentialProfiles creates a new http.Handler for the get a w s credential profiles operation
func NewGetAWSCredentialProfiles(ctx *middleware.Context, handler GetAWSCredentialProfilesHandler) *GetAWSCredentialProfiles {
	return &GetAWSCredentialProfiles{Context: ctx, Handler: handler}
}

/*GetAWSCredentialProfiles swagger:route GET /api/provider/aws/profiles aws getAWSCredentialProfiles

Retrieve AWS credential profiles

*/
type GetAWSCredentialProfiles struct {
	Context *middleware.Context
	Handler GetAWSCredentialProfilesHandler
}

func (o *GetAWSCredentialProfiles) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAWSCredentialProfilesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
