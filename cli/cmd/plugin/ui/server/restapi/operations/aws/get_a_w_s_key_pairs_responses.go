// Code generated by go-swagger; DO NOT EDIT.

package aws

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// GetAWSKeyPairsOKCode is the HTTP code returned for type GetAWSKeyPairsOK
const GetAWSKeyPairsOKCode int = 200

/*GetAWSKeyPairsOK Successful retrieval of AWS key pairs

swagger:response getAWSKeyPairsOK
*/
type GetAWSKeyPairsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.AWSKeyPair `json:"body,omitempty"`
}

// NewGetAWSKeyPairsOK creates GetAWSKeyPairsOK with default headers values
func NewGetAWSKeyPairsOK() *GetAWSKeyPairsOK {

	return &GetAWSKeyPairsOK{}
}

// WithPayload adds the payload to the get a w s key pairs o k response
func (o *GetAWSKeyPairsOK) WithPayload(payload []*models.AWSKeyPair) *GetAWSKeyPairsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get a w s key pairs o k response
func (o *GetAWSKeyPairsOK) SetPayload(payload []*models.AWSKeyPair) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAWSKeyPairsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.AWSKeyPair, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAWSKeyPairsBadRequestCode is the HTTP code returned for type GetAWSKeyPairsBadRequest
const GetAWSKeyPairsBadRequestCode int = 400

/*GetAWSKeyPairsBadRequest Bad request

swagger:response getAWSKeyPairsBadRequest
*/
type GetAWSKeyPairsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAWSKeyPairsBadRequest creates GetAWSKeyPairsBadRequest with default headers values
func NewGetAWSKeyPairsBadRequest() *GetAWSKeyPairsBadRequest {

	return &GetAWSKeyPairsBadRequest{}
}

// WithPayload adds the payload to the get a w s key pairs bad request response
func (o *GetAWSKeyPairsBadRequest) WithPayload(payload *models.Error) *GetAWSKeyPairsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get a w s key pairs bad request response
func (o *GetAWSKeyPairsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAWSKeyPairsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAWSKeyPairsUnauthorizedCode is the HTTP code returned for type GetAWSKeyPairsUnauthorized
const GetAWSKeyPairsUnauthorizedCode int = 401

/*GetAWSKeyPairsUnauthorized Incorrect credentials

swagger:response getAWSKeyPairsUnauthorized
*/
type GetAWSKeyPairsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAWSKeyPairsUnauthorized creates GetAWSKeyPairsUnauthorized with default headers values
func NewGetAWSKeyPairsUnauthorized() *GetAWSKeyPairsUnauthorized {

	return &GetAWSKeyPairsUnauthorized{}
}

// WithPayload adds the payload to the get a w s key pairs unauthorized response
func (o *GetAWSKeyPairsUnauthorized) WithPayload(payload *models.Error) *GetAWSKeyPairsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get a w s key pairs unauthorized response
func (o *GetAWSKeyPairsUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAWSKeyPairsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAWSKeyPairsInternalServerErrorCode is the HTTP code returned for type GetAWSKeyPairsInternalServerError
const GetAWSKeyPairsInternalServerErrorCode int = 500

/*GetAWSKeyPairsInternalServerError Internal server error

swagger:response getAWSKeyPairsInternalServerError
*/
type GetAWSKeyPairsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAWSKeyPairsInternalServerError creates GetAWSKeyPairsInternalServerError with default headers values
func NewGetAWSKeyPairsInternalServerError() *GetAWSKeyPairsInternalServerError {

	return &GetAWSKeyPairsInternalServerError{}
}

// WithPayload adds the payload to the get a w s key pairs internal server error response
func (o *GetAWSKeyPairsInternalServerError) WithPayload(payload *models.Error) *GetAWSKeyPairsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get a w s key pairs internal server error response
func (o *GetAWSKeyPairsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAWSKeyPairsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
