// Code generated by go-swagger; DO NOT EDIT.

package ldap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// VerifyLdapConnectOKCode is the HTTP code returned for type VerifyLdapConnectOK
const VerifyLdapConnectOKCode int = 200

/*VerifyLdapConnectOK Verified LDAP credentials successfully

swagger:response verifyLdapConnectOK
*/
type VerifyLdapConnectOK struct {

	/*
	  In: Body
	*/
	Payload *models.LdapTestResult `json:"body,omitempty"`
}

// NewVerifyLdapConnectOK creates VerifyLdapConnectOK with default headers values
func NewVerifyLdapConnectOK() *VerifyLdapConnectOK {

	return &VerifyLdapConnectOK{}
}

// WithPayload adds the payload to the verify ldap connect o k response
func (o *VerifyLdapConnectOK) WithPayload(payload *models.LdapTestResult) *VerifyLdapConnectOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify ldap connect o k response
func (o *VerifyLdapConnectOK) SetPayload(payload *models.LdapTestResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyLdapConnectOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyLdapConnectBadRequestCode is the HTTP code returned for type VerifyLdapConnectBadRequest
const VerifyLdapConnectBadRequestCode int = 400

/*VerifyLdapConnectBadRequest Bad request

swagger:response verifyLdapConnectBadRequest
*/
type VerifyLdapConnectBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVerifyLdapConnectBadRequest creates VerifyLdapConnectBadRequest with default headers values
func NewVerifyLdapConnectBadRequest() *VerifyLdapConnectBadRequest {

	return &VerifyLdapConnectBadRequest{}
}

// WithPayload adds the payload to the verify ldap connect bad request response
func (o *VerifyLdapConnectBadRequest) WithPayload(payload *models.Error) *VerifyLdapConnectBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify ldap connect bad request response
func (o *VerifyLdapConnectBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyLdapConnectBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyLdapConnectUnauthorizedCode is the HTTP code returned for type VerifyLdapConnectUnauthorized
const VerifyLdapConnectUnauthorizedCode int = 401

/*VerifyLdapConnectUnauthorized Incorrect credentials

swagger:response verifyLdapConnectUnauthorized
*/
type VerifyLdapConnectUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVerifyLdapConnectUnauthorized creates VerifyLdapConnectUnauthorized with default headers values
func NewVerifyLdapConnectUnauthorized() *VerifyLdapConnectUnauthorized {

	return &VerifyLdapConnectUnauthorized{}
}

// WithPayload adds the payload to the verify ldap connect unauthorized response
func (o *VerifyLdapConnectUnauthorized) WithPayload(payload *models.Error) *VerifyLdapConnectUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify ldap connect unauthorized response
func (o *VerifyLdapConnectUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyLdapConnectUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// VerifyLdapConnectInternalServerErrorCode is the HTTP code returned for type VerifyLdapConnectInternalServerError
const VerifyLdapConnectInternalServerErrorCode int = 500

/*VerifyLdapConnectInternalServerError Internal server error

swagger:response verifyLdapConnectInternalServerError
*/
type VerifyLdapConnectInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVerifyLdapConnectInternalServerError creates VerifyLdapConnectInternalServerError with default headers values
func NewVerifyLdapConnectInternalServerError() *VerifyLdapConnectInternalServerError {

	return &VerifyLdapConnectInternalServerError{}
}

// WithPayload adds the payload to the verify ldap connect internal server error response
func (o *VerifyLdapConnectInternalServerError) WithPayload(payload *models.Error) *VerifyLdapConnectInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the verify ldap connect internal server error response
func (o *VerifyLdapConnectInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VerifyLdapConnectInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
