// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware-tanzu/community-edition/cli/cmd/plugin/ui/server/models"
)

// GetWorkloadClusterOKCode is the HTTP code returned for type GetWorkloadClusterOK
const GetWorkloadClusterOKCode int = 200

/*GetWorkloadClusterOK List of workload clusters being managed.

swagger:response getWorkloadClusterOK
*/
type GetWorkloadClusterOK struct {

	/*
	  In: Body
	*/
	Payload *models.WorkloadCluster `json:"body,omitempty"`
}

// NewGetWorkloadClusterOK creates GetWorkloadClusterOK with default headers values
func NewGetWorkloadClusterOK() *GetWorkloadClusterOK {

	return &GetWorkloadClusterOK{}
}

// WithPayload adds the payload to the get workload cluster o k response
func (o *GetWorkloadClusterOK) WithPayload(payload *models.WorkloadCluster) *GetWorkloadClusterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload cluster o k response
func (o *GetWorkloadClusterOK) SetPayload(payload *models.WorkloadCluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadClusterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadClusterBadRequestCode is the HTTP code returned for type GetWorkloadClusterBadRequest
const GetWorkloadClusterBadRequestCode int = 400

/*GetWorkloadClusterBadRequest Bad request

swagger:response getWorkloadClusterBadRequest
*/
type GetWorkloadClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkloadClusterBadRequest creates GetWorkloadClusterBadRequest with default headers values
func NewGetWorkloadClusterBadRequest() *GetWorkloadClusterBadRequest {

	return &GetWorkloadClusterBadRequest{}
}

// WithPayload adds the payload to the get workload cluster bad request response
func (o *GetWorkloadClusterBadRequest) WithPayload(payload *models.Error) *GetWorkloadClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload cluster bad request response
func (o *GetWorkloadClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadClusterUnauthorizedCode is the HTTP code returned for type GetWorkloadClusterUnauthorized
const GetWorkloadClusterUnauthorizedCode int = 401

/*GetWorkloadClusterUnauthorized Incorrect credentials

swagger:response getWorkloadClusterUnauthorized
*/
type GetWorkloadClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkloadClusterUnauthorized creates GetWorkloadClusterUnauthorized with default headers values
func NewGetWorkloadClusterUnauthorized() *GetWorkloadClusterUnauthorized {

	return &GetWorkloadClusterUnauthorized{}
}

// WithPayload adds the payload to the get workload cluster unauthorized response
func (o *GetWorkloadClusterUnauthorized) WithPayload(payload *models.Error) *GetWorkloadClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload cluster unauthorized response
func (o *GetWorkloadClusterUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkloadClusterInternalServerErrorCode is the HTTP code returned for type GetWorkloadClusterInternalServerError
const GetWorkloadClusterInternalServerErrorCode int = 500

/*GetWorkloadClusterInternalServerError Internal server error

swagger:response getWorkloadClusterInternalServerError
*/
type GetWorkloadClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkloadClusterInternalServerError creates GetWorkloadClusterInternalServerError with default headers values
func NewGetWorkloadClusterInternalServerError() *GetWorkloadClusterInternalServerError {

	return &GetWorkloadClusterInternalServerError{}
}

// WithPayload adds the payload to the get workload cluster internal server error response
func (o *GetWorkloadClusterInternalServerError) WithPayload(payload *models.Error) *GetWorkloadClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workload cluster internal server error response
func (o *GetWorkloadClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkloadClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
