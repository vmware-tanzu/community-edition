swagger: "2.0"
info:
  title: "Tanzu User Interface API"
  description: "Tanzu User Interface API."
  version: 0.0.0
basePath: /
produces:
  - application/json
consumes:
  - application/json
schemes:
  - http
  - https

paths:
  /api/features:
    get:
      tags: ["features"]
      summary: "Retrieve list of features"
      operationId: getFeatureFlags
      responses:
        200:
          description: Successful retrieval of feature flags
          schema:
            $ref: "#/definitions/Features"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/edition:
    get:
      tags: ["edition"]
      summary: "Retrieve Tanzu edition"
      operationId: getTanzuEdition
      responses:
        200:
          description: Successful retrieval of tanzu edition
          schema:
            type: string
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/containerruntime:
    get:
      tags: ["cri"]
      summary: Get container runtime information
      operationId: getContainerRuntimeInfo
      responses:
        200:
          description: Successful retrieval of container runtime information.
          schema:
            $ref: '#/definitions/RuntimeInfo'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/avi:
    post:
      tags: ["avi"]
      summary: "Validate Avi controller credentials"
      operationId: verifyAccount
      parameters:
        - name: credentials
          in: body
          description: "Avi controller credentials"
          schema:
            $ref: "#/definitions/AviControllerParams"
      responses:
        201:
          description: Verified AVI credentials successfully
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/ldap/connect:
    post:
      tags: ["ldap"]
      summary: "Validate LDAP connection"
      operationId: verifyLdapConnect
      parameters:
        - name: credentials
          in: body
          description: "LDAP configuration"
          schema:
            $ref: "#/definitions/LdapParams"
      responses:
        200:
          description: Verified LDAP credentials successfully
          schema:
            $ref: '#/definitions/LdapTestResult'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/ldap/bind:
    post:
      tags: ["ldap"]
      summary: "Validate LDAP bind or authentication"
      operationId: verifyLdapBind
      responses:
        200:
          description: Verified LDAP credentials successfully
          schema:
            $ref: '#/definitions/LdapTestResult'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
  /api/ldap/users/search:
    post:
      tags: ["ldap"]
      summary: "Validate LDAP User Search configuration"
      operationId: verifyLdapUserSearch
      responses:
        200:
          description: Verified LDAP credentials successfully
          schema:
            $ref: '#/definitions/LdapTestResult'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
  /api/ldap/groups/search:
    post:
      tags: ["ldap"]
      summary: "Validate LDAP Group Search configuration"
      operationId: verifyLdapGroupSearch
      responses:
        200:
          description: Verified LDAP credentials successfully
          schema:
            $ref: '#/definitions/LdapTestResult'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/ldap/disconnect:
    post:
      tags: ["ldap"]
      summary: "Validate if the LDAP connection can be closed"
      operationId: verifyLdapCloseConnection
      responses:
        201:
          description: Verified LDAP credentials successfully
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/avi/clouds:
    get:
      tags: ["avi"]
      summary: "Retrieve Avi load balancer clouds"
      operationId: getAviClouds
      responses:
        200:
          description: Successful retrieval of Avi load balancer clouds
          schema:
            type: array
            items:
              $ref: '#/definitions/AviCloud'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/avi/serviceenginegroups:
    get:
      tags: ["avi"]
      summary: "Retrieve Avi load balancer service engine groups"
      operationId: getAviServiceEngineGroups
      responses:
        200:
          description: Successful retrieval of Avi load balancer service engine groups
          schema:
            type: array
            items:
              $ref: '#/definitions/AviServiceEngineGroup'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/avi/vipnetworks:
    get:
      tags: ["avi"]
      summary: "Retrieve all Avi networks"
      operationId: getAviVipNetworks
      responses:
        200:
          description: Successful retrieval of Avi load balancer service engine groups
          schema:
            type: array
            items:
              $ref: '#/definitions/AviVipNetwork'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider:
    get:
      tags: ["provider"]
      summary: "Get infrastructure provider given by the user via cli"
      operationId: getProvider
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/providerInfo"
        400:
          description: "Bad request"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/thumbprint:
    get:
      tags: ["vsphere"]
      summary: "Get vSphere thumbprint"
      operationId: getVsphereThumbprint
      parameters:
        - name: host
          in: query
          description: "vSphere host"
          type: string
          required: true
      responses:
        200:
          description: Successful retrieval of vSphere thumbprint
          schema:
            $ref: '#/definitions/VSphereThumbprint'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere:
    post:
      tags: ["vsphere"]
      summary: "Validate and set vSphere credentials"
      operationId: setVSphereEndpoint
      parameters:
        - name: credentials
          in: body
          description: "vSphere credentials"
          schema:
            $ref: "#/definitions/VSphereCredentials"
      responses:
        201:
          description: Connection successful
          schema:
            $ref: '#/definitions/vsphereInfo'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'


  /api/provider/vsphere/datacenters:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere datacenters"
      operationId: getVSphereDatacenters
      responses:
        200:
          description: Successful retrieval of vSphere datacenters
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereDatacenter'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/datastores:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere datastores"
      operationId: getVSphereDatastores
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of vSphere datastores
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereDatastore'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/folders:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere folders"
      operationId: getVSphereFolders
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of vSphere folders
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereFolder'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/compute:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere compute resources"
      operationId: getVSphereComputeResources
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of vSphere folders
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereManagementObject'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'


  /api/provider/vsphere/resourcepools:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere resource pools"
      operationId: getVSphereResourcePools
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of vSphere resourcePools
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereResourcePool'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/networks:
    get:
      tags: ["vsphere"]
      summary: "Retrieve networks associated with the datacenter in vSphere"
      operationId: getVSphereNetworks
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of vSphere networks
          schema:
            description: a list of vpshere networks
            type: array
            items:
              $ref: '#/definitions/VSphereNetwork'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/nodetypes:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere supported kubernetes control plane node types"
      operationId: getVSphereNodeTypes
      responses:
        200:
          description: Successful retrieval of node types supported by vSphere
          schema:
            type: array
            items:
              $ref: '#/definitions/NodeType'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/osimages:
    get:
      tags: ["vsphere"]
      summary: "Retrieve vSphere supported node os images"
      operationId: getVSphereOSImages
      parameters:
        - name: dc
          in: query
          required: true
          type: string
          description: "datacenter managed object Id, e.g. datacenter-2"
      responses:
        200:
          description: Successful retrieval of node images supported by vSphere
          schema:
            type: array
            items:
              $ref: '#/definitions/VSphereVirtualMachine'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/config/export:
    post:
      tags: ["vsphere"]
      summary: "Generate TKG configuration file for vSphere"
      operationId: exportTKGConfigForVsphere
      parameters:
        - in: body
          name: params
          description: params to generate tkg configuration for vsphere
          required: true
          schema:
            $ref: '#/definitions/VsphereManagementClusterParams'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/tkgconfig:
    post:
      tags: ["vsphere"]
      summary: "Apply changes to TKG configuration file for vSphere"
      operationId: applyTKGConfigForVsphere
      parameters:
        - in: body
          name: params
          description: params to apply changes to tkg configuration for vsphere
          required: true
          schema:
            $ref: '#/definitions/VsphereManagementClusterParams'
      responses:
        200:
          description: apply changes to TKG configuration file successfully
          schema:
            $ref: "#/definitions/ConfigFileInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/config/import:
    post:
      tags: ["vsphere"]
      summary: "Generate TKG configuration object for vSphere"
      operationId: importTKGConfigForVsphere
      parameters:
        - in: body
          name: params
          description: config file from which to generate tkg configuration for vsphere
          required: true
          schema:
            $ref: '#/definitions/ConfigFile'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            $ref: '#/definitions/VsphereManagementClusterParams'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/vsphere/create:
    post:
      tags: ["vsphere"]
      summary: "Create vSphere management cluster"
      operationId: createVSphereManagementCluster
      parameters:
        - in: body
          name: params
          description: params to create a management cluster
          required: true
          schema:
            $ref: '#/definitions/VsphereManagementClusterParams'
      responses:
        200:
          description: Creating management cluster started successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'


  /api/provider/aws:
    post:
      tags: ["aws"]
      summary: "Validate and set aws credentials"
      operationId: setAWSEndpoint
      parameters:
        - name: accountParams
          in: body
          description: "AWS account parameters"
          schema:
            $ref: "#/definitions/AWSAccountParams"
      responses:
        201:
          description: Connection successful
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/vpc:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS VPCs"
      operationId: getVPCs
      responses:
        200:
          description: Successful retrieval of AWS VPCs
          schema:
            type: array
            items:
              $ref: "#/definitions/vpc"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/nodetypes:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS supported node types"
      operationId: getAWSNodeTypes
      parameters:
        - name: az
          in: query
          required: false
          type: string
          description: "AWS availability zone, e.g. us-west-2"
      responses:
        200:
          description: Successful retrieval of AWS node types
          schema:
            type: array
            items:
              type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/regions:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS regions"
      operationId: getAWSRegions
      responses:
        200:
          description: Successful retrieval of AWS regions
          schema:
            type: array
            items:
              type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/keypair:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS key pairs"
      operationId: getAWSKeyPairs
      responses:
        200:
          description: Successful retrieval of AWS key pairs
          schema:
            type: array
            items:
              $ref: "#/definitions/AWSKeyPair"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/osimages:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS supported os images"
      operationId: getAWSOSImages
      parameters:
        - name: region
          in: query
          required: true
          type: string
          description: "AWS region, e.g. us-west-2"
      responses:
        200:
          description: Successful retrieval of AWS supported os images
          schema:
            type: array
            items:
              $ref: '#/definitions/AWSVirtualMachine'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/profiles:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS credential profiles"
      operationId: getAWSCredentialProfiles
      responses:
        200:
          description: Successful retrieval of AWS credentials profiles
          schema:
            type: array
            items:
              type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/AvailabilityZones:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS availability zones of current region"
      operationId: getAWSAvailabilityZones
      responses:
        200:
          description: Successful retrieval of AWS availability zones
          schema:
            type: array
            items:
              $ref: "#/definitions/AWSAvailabilityZone"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/subnets:
    get:
      tags: ["aws"]
      summary: "Retrieve AWS Subnets info under a VPC"
      operationId: getAWSSubnets
      parameters:
        - name: vpcId
          in: query
          required: true
          type: string
          description: "VPC Id"
      responses:
        200:
          description: Successful retrieval of AWS subnets
          schema:
            type: array
            items:
              $ref: "#/definitions/AWSSubnet"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/config/export:
    post:
      tags: ["aws"]
      summary: Generate TKG configuration file for AWS"
      operationId: exportTKGConfigForAWS
      parameters:
        - in: body
          name: params
          description: parameters to generate TKG configuration file for AWS
          required: true
          schema:
            $ref: '#/definitions/AWSManagementClusterParams'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/tkgconfig:
    post:
      tags: ["aws"]
      summary: Apply the changes to TKG configuration file for AWS"
      operationId: applyTKGConfigForAWS
      parameters:
        - in: body
          name: params
          description: parameters to apply changes to TKG configuration file for AWS
          required: true
          schema:
            $ref: '#/definitions/AWSManagementClusterParams'
      responses:
        200:
          description: Apply change to TKG configuration successfully
          schema:
            $ref: "#/definitions/ConfigFileInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/create:
    post:
      tags: ["aws"]
      summary: "Create AWS management cluster"
      operationId: createAWSManagementCluster
      parameters:
        - in: body
          name: params
          description: parameters to create a management cluster
          required: true
          schema:
            $ref: '#/definitions/AWSManagementClusterParams'
      responses:
        200:
          description: Creating management cluster started successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/aws/config/import:
    post:
      tags: ["aws"]
      summary: "Generate TKG configuration object for AWS"
      operationId: importTKGConfigForAWS
      parameters:
        - in: body
          name: params
          description: config file from which to generate tkg configuration for aws
          required: true
          schema:
            $ref: '#/definitions/ConfigFile'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            $ref: '#/definitions/AWSManagementClusterParams'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure:
    get:
      tags: ["azure"]
      summary: "Retrieve azure account params from environment variables"
      operationId: getAzureEndpoint
      responses:
        200:
          description: Successful retrieval of Azure account parameters
          schema:
            $ref: "#/definitions/AzureAccountParams"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: ["azure"]
      summary: "Validate and set azure credentials"
      operationId: setAzureEndpoint
      parameters:
        - name: accountParams
          in: body
          description: "Azure account parameters"
          schema:
            $ref: "#/definitions/AzureAccountParams"
      responses:
        201:
          description: "Connection successful"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Incorrect credentials"
          schema:
            $ref: '#/definitions/Error'
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/resourcegroups:
    get:
      tags: ["azure"]
      summary: "Retrieve list of Azure resource groups for a subscription"
      operationId: getAzureResourceGroups
      parameters:
        - name: location
          in: query
          required: true
          type: string
          description: "Azure region"
      responses:
        200:
          description: Successful retrieval of Azure resource groups
          schema:
            type: array
            items:
              $ref: "#/definitions/AzureResourceGroup"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: ["azure"]
      summary: "Create a new Azure resource group"
      operationId: createAzureResourceGroup
      parameters:
        - in: body
          name: params
          description: parameters to create a new Azure resource group
          required: true
          schema:
            $ref: '#/definitions/AzureResourceGroup'
      responses:
        201:
          description: Successfully created Azure resource group
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'


  /api/provider/azure/resourcegroups/{resourceGroupName}/vnets:
    get:
      tags: ["azure"]
      summary: "Retrieve list of Azure virtual networks in a resource group"
      operationId: getAzureVnets
      parameters:
        - name: resourceGroupName
          in: path
          required: true
          type: string
          description: "Name of the Azure resource group"
        - name: location
          in: query
          required: true
          type: string
          description: "Azure region"
      responses:
        200:
          description: Successful retrieval of Azure virtual networks
          schema:
            type: array
            items:
              $ref: "#/definitions/AzureVirtualNetwork"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: ["azure"]
      summary: "Create a new Azure Virtual Network"
      operationId: createAzureVirtualNetwork
      parameters:
        - name: resourceGroupName
          in: path
          required: true
          type: string
          description: "Name of the Azure resource group"
        - in: body
          name: params
          description: parameters to create a new Azure Virtual network
          required: true
          schema:
            $ref: '#/definitions/AzureVirtualNetwork'
      responses:
        201:
          description: Successfully created Azure Virtual network
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/osimages:
    get:
      tags: ["azure"]
      summary: "Retrieve Azure supported os images"
      operationId: getAzureOSImages
      responses:
        200:
          description: Successful retrieval of Azure supported os images
          schema:
            type: array
            items:
              $ref: '#/definitions/AzureVirtualMachine'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/regions:
    get:
      tags: ["azure"]
      summary: "Retrieve list of supported Azure regions"
      operationId: getAzureRegions
      responses:
        200:
          description: Successful retrieval of Azure regions
          schema:
            type: array
            items:
              $ref: '#/definitions/AzureLocation'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/regions/{location}/instanceTypes:
    get:
      tags: ["azure"]
      summary: "Retrieve list of supported Azure instance types for a region"
      operationId: getAzureInstanceTypes
      parameters:
        - name: location
          in: path
          required: true
          type: string
          description: "Azure region name"
      responses:
        200:
          description: Successful retrieval of Azure instance Types
          schema:
            type: array
            items:
              $ref: '#/definitions/AzureInstanceType'
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/config/export:
    post:
      tags: ["azure"]
      summary: Generate TKG configuration file for Azure"
      operationId: exportTKGConfigForAzure
      parameters:
        - in: body
          name: params
          description: parameters to generate TKG configuration file for Azure
          required: true
          schema:
            $ref: '#/definitions/AzureManagementClusterParams'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/tkgconfig:
    post:
      tags: ["azure"]
      summary: Apply the changes to TKG configuration file for Azure"
      operationId: applyTKGConfigForAzure
      parameters:
        - in: body
          name: params
          description: parameters to apply changes to TKG configuration file for Azure
          required: true
          schema:
            $ref: '#/definitions/AzureManagementClusterParams'
      responses:
        200:
          description: Apply change to TKG configuration successfully
          schema:
            $ref: "#/definitions/ConfigFileInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/create:
    post:
      tags: ["azure"]
      summary: "Create Azure management cluster"
      operationId: createAzureManagementCluster
      parameters:
        - in: body
          name: params
          description: parameters to create a management cluster
          required: true
          schema:
            $ref: '#/definitions/AzureManagementClusterParams'
      responses:
        200:
          description: Creating management cluster started successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/azure/config/import:
    post:
      tags: ["azure"]
      summary: "Generate TKG configuration object for azure"
      operationId: importTKGConfigForAzure
      parameters:
        - in: body
          name: params
          description: config file from which to generate tkg configuration for azure
          required: true
          schema:
            $ref: '#/definitions/ConfigFile'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            $ref: '#/definitions/AzureManagementClusterParams'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/docker/daemon:
    get:
      tags: ["docker"]
      summary: Check if docker deamon is available
      operationId: checkIfDockerDaemonAvailable
      responses:
        200:
          description: Checked the docker daemon status successfully.
          schema:
            $ref: '#/definitions/DockerDaemonStatus'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/docker/config/export:
    post:
      tags: ["docker"]
      summary: Generate TKG configuration file for Docker"
      operationId: exportTKGConfigForDocker
      parameters:
        - in: body
          name: params
          description: parameters to generate TKG configuration file for Docker
          required: true
          schema:
            $ref: '#/definitions/DockerManagementClusterParams'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/docker/tkgconfig:
    post:
      tags: ["docker"]
      summary: Apply the changes to TKG configuration file for docker"
      operationId: applyTKGConfigForDocker
      parameters:
        - in: body
          name: params
          description: parameters to apply changes to TKG configuration file for Docker
          required: true
          schema:
            $ref: '#/definitions/DockerManagementClusterParams'
      responses:
        200:
          description: Apply change to TKG configuration successfully
          schema:
            $ref: "#/definitions/ConfigFileInfo"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/docker/create:
    post:
      tags: ["docker"]
      summary: "Create Docker management cluster"
      operationId: createDockerManagementCluster
      parameters:
        - in: body
          name: params
          description: parameters to create a management cluster
          required: true
          schema:
            $ref: '#/definitions/DockerManagementClusterParams'
      responses:
        200:
          description: Creating management cluster started successfully
          schema:
            type: string
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/provider/docker/config/import:
    post:
      tags: ["docker"]
      summary: "Generate TKG configuration object for docker"
      operationId: importTKGConfigForDocker
      parameters:
        - in: body
          name: params
          description: config file from which to generate tkg configuration for docker
          required: true
          schema:
            $ref: '#/definitions/ConfigFile'
      responses:
        200:
          description: Generated TKG configuration successfully
          schema:
            $ref: '#/definitions/DockerManagementClusterParams'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management:
    get:
      operationId: getMgmtClusters
      tags: ["management"]
      summary: "Retrieve list of management clusters"
      responses:
        200:
          description: Retrieve list of management clusters
          schema:
            description: a list of management clusters
            type: array
            items:
              $ref: '#/definitions/ManagementCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management/{managementClusterName}:
    parameters:
      - in: path
        name: managementClusterName
        type: string
        required: true
        description: The name of the management cluster.
    get:
      operationId: getMgmtCluster
      tags: ["management"]
      summary: "Get details of a management cluster."
      responses:
        200:
          description: Management cluster details.
          schema:
            $ref: '#/definitions/ManagementCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: deleteMgmtCluster
      tags: ["management"]
      summary: "Delete a management cluster."
      responses:
        200:
          description: Cluster deletion submitted.
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management/{managementClusterName}/clusterclass:
    get:
      operationId: getClusterClasses
      tags: ["management"]
      summary: "Retrieve list of cluster classes on given management cluster"
      parameters:
        - in: path
          name: managementClusterName
          type: string
          required: true
          description: The name of the management cluster.
      responses:
        200:
          description: Retrieve list of management cluster ClusterClasses.
          schema:
            description: A list of ClusterClasses.
            type: array
            items:
              $ref: '#/definitions/ClusterClass'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management/{managementClusterName}/clusterclass/{clusterClassName}:
    get:
      operationId: getClusterClass
      tags: ["management"]
      summary: "Retrieve list of cluster classes on given management cluster"
      parameters:
        - in: path
          name: managementClusterName
          type: string
          required: true
          description: The name of the management cluster.
        - in: path
          name: clusterClassName
          type: string
          required: true
          description: The ClusterClass identifier.
      responses:
        200:
          description: Retrieve a single ClusterClass
          schema:
            description: A ClusterClass
            $ref: '#/definitions/ClusterClass'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management/{managementClusterName}/cluster:
    parameters:
      - in: path
        name: managementClusterName
        type: string
        required: true
        description: The name of the management cluster.
    get:
      tags: ["cluster"]
      summary: "Lists all workload clusters managed by a management cluster."
      operationId: getWorkloadClusters
      parameters:
        - in: header
          name: clusterNamespace
          type: string
          required: false
          description: The namespace of the workload clusters.
      responses:
        200:
          description: List of workload clusters being managed.
          schema:
            description: A list of workload clusters.
            type: array
            items:
              $ref: '#/definitions/WorkloadCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      tags: ["cluster"]
      summary: "Create a new workload clusters managed by a management cluster."
      operationId: createWorkloadCluster
      parameters:
        - in: body
          name: params
          description: Parameters to create a workload cluster.
          required: true
          schema:
            $ref: '#/definitions/CreateWorkloadClusterParams'
      responses:
        200:
          description: Create workload cluster started successfully.
          schema:
            $ref: '#/definitions/WorkloadCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/management/{managementClusterName}/cluster/{clusterName}:
    parameters:
      - in: path
        name: managementClusterName
        type: string
        required: true
        description: The name of the management cluster.
      - in: path
        name: clusterName
        type: string
        required: true
        description: The name of the workload cluster.
      - in: header
        name: clusterNamespace
        type: string
        required: false
        description: The namespace of the workload cluster.
    get:
      tags: ["cluster"]
      summary: "Get details of a workload cluster."
      operationId: getWorkloadCluster
      responses:
        200:
          description: List of workload clusters being managed.
          schema:
            $ref: '#/definitions/WorkloadCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags: ["cluster"]
      summary: "Delete a workload cluster."
      operationId: deleteWorkloadCluster
      responses:
        200:
          description: Cluster deletion submitted.
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: Incorrect credentials
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/unmanaged:
    get:
      operationId: getUnmanagedClusters
      tags: ["unmanaged"]
      summary: "Retrieve list of unmanaged clusters"
      responses:
        200:
          description: Success
          schema:
            description: List of unmanaged clusters
            type: array
            items:
              $ref: '#/definitions/UnmanagedCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    post:
      operationId: createUnmanagedCluster
      tags: ["unmanaged"]
      summary: "Create a new unmanaged cluster"
      parameters:
        - in: body
          name: params
          description: Parameters to create an unmanaged cluster.
          required: true
          schema:
            $ref: '#/definitions/CreateUnmanagedClusterParams'
      responses:
        200:
          description: Create unmanaged cluster started successfully.
          schema:
            $ref: '#/definitions/UnmanagedCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

  /api/unmanaged/{clusterName}:
    parameters:
      - in: path
        name: clusterName
        type: string
        required: true
        description: The name of the unmanaged cluster.
    get:
      tags: ["unmanaged"]
      summary: "Get details of an unmanaged cluster."
      operationId: getUnmanagedCluster
      responses:
        200:
          description: List of unmanaged clusters.
          schema:
            $ref: '#/definitions/UnmanagedCluster'
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags: ["unmanaged"]
      summary: "Delete an unmanaged cluster."
      operationId: deleteUnmanagedCluster
      responses:
        200:
          description: Cluster deletion submitted.
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal server error"
          schema:
            $ref: '#/definitions/Error'

definitions:
  Error:
    type: object
    properties:
      message:
        type: string

  RuntimeInfo:
    type: object
    properties:
      name:
        type: string
      ostype:
        type: string
      osversion:
        type: string
      architecture:
        type: string
      cpu:
        type: integer
      memory:
        type: integer
      containers:
        type: integer

  VSphereCredentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      host:
        type: string
      thumbprint:
        type: string
      insecure:
        type: boolean
        default: false

  VSphereThumbprint:
    type: object
    properties:
      thumbprint:
        type: string
      insecure:
        type: boolean
        default: false

  VSphereDatacenter:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string

  VSphereDatastore:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string

  VSphereFolder:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string

  VSphereResourcePool:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string

  VSphereManagementObject:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string
      parentMoid:
        type: string
      resourceType:
        type: string
        enum: [datacenter, cluster, hostgroup, folder, respool, vm, datastore, host, network]
      path:
        type: string

  VSphereNetwork:
    type: object
    properties:
      name:
        type: string
      displayName:
        type: string
      moid:
        type: string

  VSphereVirtualMachine:
    type: object
    properties:
      name:
        type: string
      moid:
        type: string
      k8sVersion:
        type: string
      isTemplate:
        type: boolean
      osInfo:
        $ref: '#/definitions/OSInfo'
    required:
      - isTemplate

  AWSVirtualMachine:
    type: object
    properties:
      name:
        type: string
      osInfo:
        $ref: '#/definitions/OSInfo'

  AzureVirtualMachine:
    type: object
    properties:
      name:
        type: string
      osInfo:
        $ref: '#/definitions/OSInfo'

  OSInfo:
    type: object
    properties:
      name:
        type: string
      version:
        type: string
      arch:
        type: string

  NodeType:
    type: object
    properties:
      name:
        type: string
      cpu:
        type: integer
      ram:
        type: integer
      disk:
        type: integer


  VsphereManagementClusterParams:
    type: object
    properties:
      vsphereCredentials:
        $ref: '#/definitions/VSphereCredentials'
      clusterName:
        type: string
      datacenter:
        type: string
      resourcePool:
        type: string
      datastore:
        type: string
      folder:
        type: string
      controlPlaneNodeType:
        type: string
      controlPlaneFlavor:
        type: string
      workerNodeType:
        type: string
      numOfWorkerNode:
        type: integer
      kubernetesVersion:
        type: string
      ipFamily:
        type: string
      networking:
        $ref: '#/definitions/TKGNetwork'
      os:
        $ref: '#/definitions/VSphereVirtualMachine'
      ssh_key:
        type: string
      machineHealthCheckEnabled:
        type: boolean
      ceipOptIn:
        type: boolean
        default: true
      enableAuditLogging:
        type: boolean
      annotations:
        type: object
        additionalProperties:
          type: string
      labels:
        type: object
        additionalProperties:
          type: string
      controlPlaneEndpoint:
        type: string
      identityManagement:
        $ref: '#/definitions/IdentityManagementConfig'
      aviConfig:
        $ref: '#/definitions/AviConfig'

  AWSManagementClusterParams:
    type: object
    properties:
      awsAccountParams:
        $ref: '#/definitions/AWSAccountParams'
      clusterName:
        type: string
      controlPlaneNodeType:
        type: string
      controlPlaneFlavor:
        type: string
      loadbalancerSchemeInternal:
        type: boolean
      workerNodeType:
        type: string
      numOfWorkerNode:
        type: integer
      sshKeyName:
        type: string
      kubernetesVersion:
        type: string
      vpc:
        $ref: '#/definitions/AWSVpc'
      os:
        $ref: '#/definitions/AWSVirtualMachine'
      bastionHostEnabled:
        type: boolean
      annotations:
        type: object
        additionalProperties:
          type: string
      labels:
        type: object
        additionalProperties:
          type: string
      machineHealthCheckEnabled:
        type: boolean
      ceipOptIn:
        type: boolean
        default: true
      enableAuditLogging:
        type: boolean
      createCloudFormationStack:
        type: boolean
      networking:
        $ref: '#/definitions/TKGNetwork'
      identityManagement:
        $ref: '#/definitions/IdentityManagementConfig'

  TKGNetwork:
    type: object
    properties:
      networkName:
        type: string
      clusterDNSName:
        type: string
      clusterNodeCIDR:
        type: string
      clusterServiceCIDR:
        type: string
      clusterPodCIDR:
        type: string
      cniType:
        type: string
      httpProxyConfiguration:
        $ref: '#/definitions/HTTPProxyConfiguration'

  AWSAccountParams:
    type: object
    properties:
      region:
        type: string
      accessKeyID:
        type: string
      secretAccessKey:
        type: string
      sessionToken:
        type: string
      profileName:
        type: string

  vsphereInfo:
    type: object
    properties:
      version:
        type: string
      hasPacific:
        type: string

  providerInfo:
    type: object
    properties:
      provider:
        type: string
      tkrVersion:
        type: string

  AWSVpc:
    type: object
    properties:
      cidr:
        type: string
      vpcID:
        type: string
      azs:
        type: array
        items:
          $ref: '#/definitions/AWSNodeAz'

  AWSNodeAz:
    type: object
    properties:
      name:
        type: string
      workerNodeType:
        type: string
      privateSubnetID:
        type: string
      publicSubnetID:
        type: string

  vpc:
    type: object
    properties:
      id:
        type: string
      cidr:
        type: string

  AWSKeyPair:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      thumbprint:
        type: string

  AWSAvailabilityZone:
    type: object
    properties:
      id:
        type: string
      name:
        type: string

  AWSSubnet:
    type: object
    properties:
      id:
        type: string
      availabilityZoneName:
        type: string
      availabilityZoneId:
        type: string
      state:
        type: string
      vpcId:
        type: string
      cidr:
        type: string
      isPublic:
        type: boolean
    required:
      - isPublic

  AzureAccountParams:
    type: object
    properties:
      subscriptionId:
        type: string
      tenantId:
        type: string
      clientId:
        type: string
      clientSecret:
        type: string
      azureCloud:
        type: string

  AzureResourceGroup:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
    required:
      - name
      - location

  AzureVirtualNetwork:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      location:
        type: string
      cidrBlock:
        type: string
      subnets:
        type: array
        items:
          $ref: '#/definitions/AzureSubnet'
    required:
      - name
      - location
      - cidrBlock

  AzureInstanceType:
    type: object
    properties:
      name:
        type: string
      tier:
        type: string
      size:
        type: string
      family:
        type: string
      zones:
        type: array
        items:
          type: string

  AzureSubnet:
    type: object
    properties:
      name:
        type: string
      cidr:
        type: string

  AzureLocation:
    type: object
    properties:
      name:
        type: string
      displayName:
        type: string

  AzureManagementClusterParams:
    type: object
    properties:
      clusterName:
        type: string
      location:
        type: string
      azureAccountParams:
        $ref: '#/definitions/AzureAccountParams'
      sshPublicKey:
        type: string
      resourceGroup:
        type: string
      vnetName:
        type: string
      vnetResourceGroup:
        type: string
      vnetCidr:
        type: string
      controlPlaneSubnet:
        type: string
      controlPlaneSubnetCidr:
        type: string
      workerNodeSubnet:
        type: string
      workerNodeSubnetCidr:
        type: string
      controlPlaneMachineType:
        type: string
      workerMachineType:
        type: string
      machineHealthCheckEnabled:
        type: boolean
      isPrivateCluster:
        type: boolean
      frontendPrivateIp:
        type: string
      controlPlaneFlavor:
        type: string
      numOfWorkerNodes:
        type: string
      kubernetesVersion:
        type: string
      os:
        $ref: '#/definitions/AzureVirtualMachine'
      ceipOptIn:
        type: boolean
        default: true
      enableAuditLogging:
        type: boolean
      annotations:
        type: object
        additionalProperties:
          type: string
      labels:
        type: object
        additionalProperties:
          type: string
      networking:
        $ref: '#/definitions/TKGNetwork'
      identityManagement:
        $ref: '#/definitions/IdentityManagementConfig'

  DockerManagementClusterParams:
    type: object
    properties:
      clusterName:
        type: string
      machineHealthCheckEnabled:
        type: boolean
      controlPlaneFlavor:
        type: string
      numOfWorkerNodes:
        type: string
      kubernetesVersion:
        type: string
      ceipOptIn:
        type: boolean
        default: true
      annotations:
        type: object
        additionalProperties:
          type: string
      labels:
        type: object
        additionalProperties:
          type: string
      networking:
        $ref: '#/definitions/TKGNetwork'
      identityManagement:
        $ref: '#/definitions/IdentityManagementConfig'

  DockerDaemonStatus:
    type: object
    properties:
      status:
        type: boolean

  HTTPProxyConfiguration:
    type: object
    properties:
      enabled:
        type: boolean
      HTTPProxyURL:
        type: string
      HTTPProxyUsername:
        type: string
      HTTPProxyPassword:
        type: string
      HTTPSProxyURL:
        type: string
      HTTPSProxyUsername:
        type: string
      HTTPSProxyPassword:
        type: string
      noProxy:
        type: string

  AviControllerParams:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      host:
        type: string
      tenant:
        type: string
      CAData:
        type: string

  AviCloud:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      location:
        type: string

  AviServiceEngineGroup:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      location:
        type: string

  AviVipNetwork:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      cloud:
        type: string
      configedSubnets:
        type: array
        items:
          $ref: '#/definitions/AviSubnet'

  AviSubnet:
    type: object
    properties:
      subnet:
        type: string
      family:
        type: string

  AviNetworkParams:
    type: object
    properties:
      name:
        type: string
      cidr:
        type: string

  AviConfig:
    type: object
    properties:
      controller:
        type: string
      username:
        type: string
      password:
        type: string
      cloud:
        type: string
      service_engine:
        type: string
      ca_cert:
        type: string
      labels:
        type: object
        additionalProperties:
          type: string
      network:
        $ref: '#/definitions/AviNetworkParams'
      controlPlaneHaProvider:
        type: boolean
      managementClusterVipNetworkName:
        type: string
      managementClusterVipNetworkCidr:
        type: string

  IdentityManagementConfig:
    type: object
    properties:
      idm_type:
        type: string
        enum: [oidc,ldap,none]
      oidc_provider_name:
        type: string
      oidc_provider_url:
        type: string
        format: uri
      oidc_client_id:
        type: string
      oidc_client_secret:
        type: string
      oidc_scope:
        type: string
      oidc_claim_mappings:
        type: object
        additionalProperties:
          type: string
      oidc_skip_verify_cert:
        type: boolean
      # ldap://... or ldaps://...
      ldap_url:
        type: string
      ldap_bind_dn:
        type: string
      ldap_bind_password:
        type: string
      ldap_user_search_base_dn:
        type: string
      ldap_user_search_filter:
        type: string
      ldap_user_search_username:
        type: string
      ldap_user_search_id_attr:
        type: string
      ldap_user_search_email_attr:
        type: string
      ldap_user_search_name_attr:
        type: string
      ldap_group_search_base_dn:
        type: string
      ldap_group_search_filter:
        type: string
      ldap_group_search_user_attr:
        type: string
      ldap_group_search_group_attr:
        type: string
      ldap_group_search_name_attr:
        type: string
      ldap_root_ca:
        type: string
    default:
      idm_type: oidc
      oidc_skip_verify_cert: false
      ldap_user_search_username: userPrincipalName
      ldap_user_search_id_attr: DN
      ldap_user_search_email_attr: userPrincipalName
      ldap_group_search_user_attr: DN
      ldap_group_search_name_attr: cn
    required:
      - idm_type

  LdapParams:
    type: object
    properties:
      ldap_url:
        type: string
      ldap_bind_dn:
        type: string
      ldap_bind_password:
        type: string
      ldap_user_search_base_dn:
        type: string
      ldap_user_search_filter:
        type: string
      ldap_user_search_username:
        type: string
      ldap_user_search_id_attr:
        type: string
      ldap_user_search_email_attr:
        type: string
      ldap_user_search_name_attr:
        type: string
      ldap_group_search_base_dn:
        type: string
      ldap_group_search_filter:
        type: string
      ldap_group_search_user_attr:
        type: string
      ldap_group_search_group_attr:
        type: string
      ldap_group_search_name_attr:
        type: string
      ldap_root_ca:
        type: string
      ldap_test_user:
        type: string
      ldap_test_group:
        type: string
    default:
      ldap_user_search_username: userPrincipalName
      ldap_user_search_id_attr: DN
      ldap_user_search_email_attr: userPrincipalName
      ldap_group_search_user_attr: DN
      ldap_group_search_name_attr: cn

  ConfigFileInfo:
    type: object
    properties:
      path:
        type: string

  Features:
    type: object
    additionalProperties:
      $ref: '#/definitions/FeatureMap'

  FeatureMap:
    type: object
    additionalProperties:
      type: string

  LdapTestResult:
    type: object
    properties:
      code:
        type: integer
      desc:
        type: string

  ConfigFile:
    type: object
    properties:
      filecontents:
        type: string

  ManagementCluster:
    type: object
    properties:
      name:
        type: string
      provider:
        type: string
      context:
        type: string
      path:
        type: string
      endpoint:
        type: string
      created:
        type: string
      description:
        type: string

  ClusterClass:
    type: object
    properties:
      name:
        type: string
      label:
        type: string
      instructions:
        type: string
      createdBy:
        type: string
      categories:
        type: array
        items:
          $ref: '#/definitions/ClusterClassVariableCategory'

  ClusterClassVariable:
    type: object
    properties:
      name:
        type: string
      required:
        type: boolean
      label:
        type: string
      prompt:
        type: string
      info:
        type: string
      taxonomy:
        type: string
      default:
        type: object
      possibleValues:
        type: array
        items:
          type: string
      dataPath:
        type: string
      children:
        type: array
        items:
          $ref: '#/definitions/ClusterClassVariable'

  ClusterClassVariableCategory:
    type: object
    properties:
      name:
        type: string
      label:
        type: string
      displayOpen:
        type: boolean
      variables:
        type: array
        items:
          $ref: '#/definitions/ClusterClassVariable'

  WorkloadCluster:
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
      status:
        type: string
      k8sversion:
        type: string
      cpcount:
        type: string
      wncount:
        type: string
      plan:
        type: string

  CreateWorkloadClusterParams:
    type: object
    properties:
      name:
        type: string
      namespace:
        type: string
      controlplanecount:
        type: integer
      workernodecount:
        type: integer
      tkrversion:
        type: string
      cni:
        type: string
      controlplanesize:
        type: string
      workernodesize:
        type: string
      cpendpoint:
        type: string

  UnmanagedCluster:
    type: object
    properties:
      name:
        type: string
      provider:
        type: string
      status:
        type: string

  CreateUnmanagedClusterParams:
    type: object
    properties:
      name:
        type: string
      provider:
        type: string
      cni:
        type: string
      podcidr:
        type: string
      servicecidr:
        type: string
      portmappings:
        type: array
        items:
          type: string
      controlplanecount:
        type: integer
      workernodecount:
        type: integer
